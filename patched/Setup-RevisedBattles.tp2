////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Battles Mod for BGII
////////////////////////////////////////////////////////////////////////////////////////////////////

BACKUP ~RevisedBattles/backup~
AUTHOR ~erebusant@verizon.net~

// Modified to Patch vs. Overwrite by erebusant based entirely upon the original ideas and concepts
// of moonfruit & tyrus

AUTO_TRA ~RevisedBattles/Language/%s~

////////////////////////////////////////////////////////////////////////////////////////////////////
// Language Selection
////////////////////////////////////////////////////////////////////////////////////////////////////

LANGUAGE	~English~
		~english~
		~RevisedBattles/Language/English/titles.tra~
		~RevisedBattles/Language/English/b#cre.tra~
		~RevisedBattles/Language/English/b#dlg.tra~
		~RevisedBattles/Language/English/b#itm.tra~
		~RevisedBattles/Language/English/b#kit.tra~
		~RevisedBattles/Language/English/b#knight.tra~
		~RevisedBattles/Language/English/b#spl.tra~
		~RevisedBattles/Language/English/hideid.tra~
		~RevisedBattles/Language/English/sthideid.tra~

LANGUAGE	~French (translation by Mael from the d'Oghmatiques)~
		~french~
		~RevisedBattles/Language/French/titles.tra~
		~RevisedBattles/Language/French/b#cre.tra~
		~RevisedBattles/Language/French/b#dlg.tra~
		~RevisedBattles/Language/French/b#itm.tra~
		~RevisedBattles/Language/French/b#kit.tra~
		~RevisedBattles/Language/French/b#knight.tra~
		~RevisedBattles/Language/French/b#spl.tra~
		~RevisedBattles/Language/French/hideid.tra~
		~RevisedBattles/Language/French/sthideid.tra~

LANGUAGE	~German (translation by Leonardo Watson)~
		~german~
		~RevisedBattles/Language/German/titles.tra~
		~RevisedBattles/Language/German/b#cre.tra~
		~RevisedBattles/Language/German/b#dlg.tra~
		~RevisedBattles/Language/German/b#itm.tra~
		~RevisedBattles/Language/German/b#kit.tra~
		~RevisedBattles/Language/German/b#knight.tra~
		~RevisedBattles/Language/German/b#spl.tra~
		~RevisedBattles/Language/German/hideid.tra~
		~RevisedBattles/Language/German/sthideid.tra~

LANGUAGE	~Italian (translation by Ilot and Mother Anorexia)~
		~italian~
		~RevisedBattles/Language/Italian/titles.tra~
		~RevisedBattles/Language/Italian/b#cre.tra~
		~RevisedBattles/Language/Italian/b#dlg.tra~
		~RevisedBattles/Language/Italian/b#itm.tra~
		~RevisedBattles/Language/Italian/b#kit.tra~
		~RevisedBattles/Language/Italian/b#knight.tra~
		~RevisedBattles/Language/Italian/b#spl.tra~
		~RevisedBattles/Language/Italian/hideid.tra~
		~RevisedBattles/Language/Italian/sthideid.tra~

LANGUAGE	~Spanish (translation by Lord Psion)~
		~spanish~
		~RevisedBattles/Language/Spanish/titles.tra~
		~RevisedBattles/Language/Spanish/b#cre.tra~
		~RevisedBattles/Language/Spanish/b#dlg.tra~
		~RevisedBattles/Language/Spanish/b#itm.tra~
		~RevisedBattles/Language/Spanish/b#kit.tra~
		~RevisedBattles/Language/Spanish/b#knight.tra~
		~RevisedBattles/Language/Spanish/b#spl.tra~
		~RevisedBattles/Language/Spanish/hideid.tra~
		~RevisedBattles/Language/Spanish/sthideid.tra~

////////////////////////////////////////////////////////////////////////////////////////////////////
// Modified STATS.IDS
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7001
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY + ~Setup-RevisedBattles.exe~ ~WeiDU.exe~

// COPY + ~chitin.key~ ~RevisedBattles/chitin.ib~
// COPY_LARGE + ~dialog.tlk~ ~RevisedBattles/dialog.ib~

//MKDIR ~RevisedBattles/over.bak~
//COPY_LARGE + ~override~ ~RevisedBattles/over.bak~

//BEGIN ~Detectable Spells~ 

/// This is set up as a stand-alone mod, but in practice I assume people will call it from within an existing mod.

INCLUDE ~RevisedBattles/DS.tph~
INCLUDE ~RevisedBattles/label_weapons.tph~
INCLUDE ~RevisedBattles/ds_oldscript.tph~

OUTER_SPRINT ~detectfile~ ~RevisedBattles/cddetect.2da~
OUTER_SPRINT ~statsfile~ ~RevisedBattles/stats.2da~
OUTER_SPRINT ~khelbenfile~ ~RevisedBattles/spwi705.spl~

LAUNCH_ACTION_MACRO ~detectable_spells~

OUTER_SPRINT ~detectfile~ ~RevisedBattles/dw#detect.2da~

LAUNCH_ACTION_MACRO ~detectable_spells~



OUTER_SET ~weapon_enchantment_stat~=109
OUTER_SET ~weapon_enchantment_type~=233
/// The assumption is that slot 109 ("CLERIC_HALLOW") is used to indicate weapon enchantment. It's a proficiency, 
/// not a scripting state - that's what
/// the ~type~ codes

// Label weapons - commented out, as to date only SCS uses it

LAUNCH_ACTION_MACRO ~label_weapons~

// Fix scripts in Ascension and Kelsey that will have been broken by the new DS

OUTER_SPRINT ~marker~ ~dw#fixasc.mrk~
OUTER_SPRINT ~oldfiles~ ~RevisedBattles/oldfiles_asc.2da~
OUTER_SPRINT ~oldswapfile~ ~RevisedBattles/oldds_swap.2da~
LAUNCH_ACTION_MACRO ~fix_old_DS_scripts~ 

OUTER_SPRINT ~marker~ ~dw#fixkelsey.mrk~
OUTER_SPRINT ~oldfiles~ ~RevisedBattles/oldfiles_kelsey.2da~
OUTER_SPRINT ~oldswapfile~ ~RevisedBattles/oldds_swap.2da~
LAUNCH_ACTION_MACRO ~fix_old_DS_scripts~ 



LAUNCH_ACTION_MACRO ~fix_old_DS_scripts~ 


ACTION_IF FILE_EXISTS ~script compiler/AICOMPILE.exe~
THEN BEGIN
  COPY_EXISTING + ~STATS.IDS~   ~script compiler~
END


ACTION_IF NOT FILE_EXISTS_IN_GAME ~SPWI511.SPL~ THEN BEGIN
COPY      ~RevisedBattles/stats/soa_spl/SPWI511.SPL~	~override~ 
END
ACTION_IF NOT FILE_EXISTS_IN_GAME ~SPWI611.SPL~ THEN BEGIN
COPY      ~RevisedBattles/stats/soa_spl/SPWI611.SPL~	~override~ 
END
ACTION_IF NOT FILE_EXISTS_IN_GAME ~SPWI708.SPL~ THEN BEGIN
COPY      ~RevisedBattles/stats/soa_spl/SPWI708.SPL~	~override~ 
END
ACTION_IF NOT FILE_EXISTS_IN_GAME ~SPWI808.SPL~ THEN BEGIN
COPY      ~RevisedBattles/stats/soa_spl/SPWI808.SPL~	~override~ 
END
ACTION_IF NOT FILE_EXISTS_IN_GAME ~SPWI907.SPL~ THEN BEGIN
COPY      ~RevisedBattles/stats/soa_spl/SPWI907.SPL~	~override~ 
END

//COPY_EXISTING ~ANISUM04.2DA~  ~override~
// REPLACE_TEXTUALLY ~.*\bbearposu\b~ ~1    WWBEARWE~
//BUT_ONLY_IF_IT_CHANGES
//COPY_EXISTING ~anisum04.2da~ ~override~
//  REPLACE_TEXTUALLY ~BEARPOSU~ ~WWBEARWE~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Drizzt
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7101

REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY_EXISTING ~c6bruen.cre~     ~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG 0x14 ~8000~    // XP
    WRITE_SHORT 0x24 ~156~ // CurrHP
    WRITE_SHORT 0x26 ~156~ // MaxHP
    WRITE_BYTE 0x52 ~-8~ // THACO
    REPLACE_CRE_ITEM ~SHLD24~ #0 #0 #0 ~NONE~ ~SHIELD~
    REPLACE_CRE_ITEM ~B#AXH01~ #0 #0 #0 ~NONE~ ~WEAPON1~ EQUIP
    ADD_CRE_ITEM ~POTN52~ #3 #0 #0 ~NONE~ ~QITEM1~ 
    ADD_CRE_ITEM ~BOOTDRIZ~ #0 #0 #0 ~NONE~ ~BOOTS~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6bruen2.cre~     ~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG 0x14 ~8000~    // XP
    WRITE_SHORT 0x24 ~156~ // CurrHP 
    WRITE_SHORT 0x26 ~156~ // MaxHP
    WRITE_BYTE 0x52 ~-8~ // THACO
    REPLACE_CRE_ITEM ~B#AXH01~ #0 #0 #0 ~NONE~ ~WEAPON1~ EQUIP
    ADD_CRE_ITEM ~POTN52~ #3 #0 #0 ~NONE~ ~QITEM1~ 
    ADD_CRE_ITEM ~BOOTDRIZ~ #0 #0 #0 ~NONE~ ~BOOTS~ 
    ADD_CRE_ITEM ~SHLD24~ #0 #0 #0 ~NONE~ ~SHIELD~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6catti.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT 0x24		~100~			// Current HP 
    WRITE_SHORT 0x26		~100~			// Maximum HP 
    WRITE_BYTE 0x52		~-8~			// THAC0 
    WRITE_BYTE 0x53		~4~			// Number of Attacks 
    WRITE_ASCII 0x248		~B#CATTI~ #8	// Override 
    WRITE_ASCII 0x250		~MAGESLY~ #8	// Class 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6catti2.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT 0x24		~100~			// Current HP 
    WRITE_SHORT 0x26		~100~			// Maximum HP 
    WRITE_BYTE 0x52		~-8~			// THAC0 
    WRITE_BYTE 0x53		~4~			// Number of Attacks 
    WRITE_ASCII 0x250		~MAGESLY~ #8	// Class 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6drizz.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT 0x24		~113~			// Current HP 
    WRITE_SHORT 0x26		~113~			// Maximum HP 
    WRITE_BYTE 0x52		~-8~			// THAC0 
    WRITE_BYTE 0x54		~-3~			// Save vs. Death 
    WRITE_BYTE 0x55		~-3~			// Save vs. Wand 
    WRITE_BYTE 0x56		~-3~			// Save vs. Polymorph 
    WRITE_BYTE 0x57		~-3~			// Save vs. Attacks 
    WRITE_BYTE 0x58		~-3~			// Save vs. Spells 
    WRITE_BYTE 0x59		~50~			// Resist Fire 
    WRITE_BYTE 0x5d		~120~			// Resist Magic
    WRITE_ASCII 0x248		~B#DRIZZT~ #8	// Override 
    ADD_CRE_ITEM			~AMUL21~	#0 #0 #0	~NONE~	~AMULET~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6drizz2.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT 0x24		~113~			// Current HP 
    WRITE_SHORT 0x26		~113~			// Maximum HP 
    WRITE_BYTE 0x52		~-8~			// THAC0 
    WRITE_BYTE 0x59		~50~			// Resist Fire 
    WRITE_BYTE 0x60		~50~			// Resist Slashing 
    WRITE_BYTE 0x61		~50~			// Resist Crushing
    WRITE_BYTE 0x62		~50~			// Resist Piercing 
    WRITE_BYTE 0x63		~50~			// Resist Missiles 
    WRITE_ASCII 0x260		~USEITEM~ #8	// General 
    WRITE_ASCII 0x280		~c6drizz2~		// Death Variable
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN14~	#2 #0 #0	~NONE~	~QITEM2~
    ADD_CRE_ITEM			~POTN12~	#1 #0 #0	~NONE~	~QITEM3~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6drizz3.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT 0x24		~113~			// Current HP 
    WRITE_SHORT 0x26		~113~			// Maximum HP 
    WRITE_BYTE 0x52		~-8~			// THAC0 
    WRITE_BYTE 0x59		~50~			// Resist Fire 
    WRITE_BYTE 0x60		~50~			// Resist Slashing 
    WRITE_BYTE 0x61		~50~			// Resist Crushing
    WRITE_BYTE 0x62		~50~			// Resist Piercing 
    WRITE_BYTE 0x63		~50~			// Resist Missiles 
    WRITE_ASCII 0x260		~USEITEM~ #8	// General 
    WRITE_ASCII 0x280		~c6drizz2~		// Death Variable
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN14~	#2 #0 #0	~NONE~	~QITEM2~
    ADD_CRE_ITEM			~POTN12~	#1 #0 #0	~NONE~	~QITEM3~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6guen.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG 0x14		~10000~		// XP
    WRITE_SHORT 0x24		~180~			// Current HP 
    WRITE_SHORT 0x26		~180~			// Maximum HP 
    WRITE_SHORT 0x46		~-4~			// AC Natural
    WRITE_SHORT 0x48		~-4~			// AC Effective
    WRITE_BYTE 0x52		~-4~			// THAC0 
    WRITE_BYTE 0x54		~1~			// Save vs. Death 
    WRITE_BYTE 0x55		~1~			// Save vs. Wand 
    WRITE_BYTE 0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE 0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE 0x58		~1~			// Save vs. Spells
    WRITE_BYTE 0x59		~100~			// Resist Fire 
    WRITE_BYTE 0x5a		~100~			// Resist Cold
    WRITE_BYTE 0x5b		~100~			// Resist Electricity
    WRITE_BYTE 0x5c		~100~			// Resist Acid 
    WRITE_BYTE 0x5d		~100~			// Resist Magic
    WRITE_BYTE 0x5e		~100~			// Resist Magical Fire 
    WRITE_BYTE 0x5f		~100~			// Resist Magical Cold
    WRITE_BYTE 0x60		~100~			// Resist Slashing 
    WRITE_BYTE 0x61		~100~			// Resist Crushing
    WRITE_BYTE 0x62		~100~			// Resist Piercing 
    WRITE_BYTE 0x63		~100~			// Resist Missiles 
    WRITE_BYTE 0x234		~13~			// Highest Level Primary Class 
    WRITE_BYTE 0x237		~1~			// Gender 
    WRITE_ASCII 0x248		~B#GUEN~ #8		// Override 
    WRITE_BYTE 0x275		~1~			//Gender
    REPLACE_CRE_ITEM		~B#CATJAG~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6guen2.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG 0x14		~10000~		// XP
    WRITE_SHORT 0x24		~180~			// Current HP 
    WRITE_SHORT 0x26		~180~			// Maximum HP 
    WRITE_SHORT 0x46		~-4~			// AC Natural
    WRITE_SHORT 0x48		~-4~			// AC Effective
    WRITE_BYTE 0x52		~-4~			// THAC0 
    WRITE_BYTE 0x54		~1~			// Save vs. Death 
    WRITE_BYTE 0x55		~1~			// Save vs. Wand 
    WRITE_BYTE 0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE 0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE 0x58		~1~			// Save vs. Spells
    WRITE_BYTE 0x59		~100~			// Resist Fire 
    WRITE_BYTE 0x5a		~100~			// Resist Cold
    WRITE_BYTE 0x5b		~100~			// Resist Electricity
    WRITE_BYTE 0x5c		~100~			// Resist Acid 
    WRITE_BYTE 0x5d		~100~			// Resist Magic
    WRITE_BYTE 0x5e		~100~			// Resist Magical Fire 
    WRITE_BYTE 0x5f		~100~			// Resist Magical Cold
    WRITE_BYTE 0x60		~100~			// Resist Slashing 
    WRITE_BYTE 0x61		~100~			// Resist Crushing
    WRITE_BYTE 0x62		~100~			// Resist Piercing 
    WRITE_BYTE 0x63		~100~			// Resist Missiles 
    WRITE_BYTE 0x234		~13~			// Highest Level Primary Class 
    WRITE_BYTE 0x237		~1~			// Gender 
    WRITE_BYTE 0x275		~1~			//Gender
    REPLACE_CRE_ITEM		~B#CATJAG~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6harp.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x1c		~2537~		// Gold Carried 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_ASCII	0x248		~B#MAGE~ #8		// Override 
    ADD_CRE_ITEM			~B#ROBE01~	#0 #0 #0	~UNDROPPABLE~	~ARMOR~
    ADD_CRE_ITEM			~BRAC15~	#0 #0 #0	~NONE~	~GLOVES~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6regis.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_SHORT	0x24		~110~			// Current HP 
    WRITE_SHORT	0x26		~110~			// Maximum HP 
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x60		~15~			// Resist Slashing 
    WRITE_BYTE	0x61		~15~			// Resist Crushing
    WRITE_BYTE	0x62		~15~			// Resist Piercing 
    WRITE_BYTE	0x63		~15~			// Resist Missiles 
    REPLACE_CRE_ITEM		~B#LEAT01~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~B#SW1H01~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~SHLD24~	#0 #0 #0	~NONE~	~SHIELD~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6regis2.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_SHORT	0x24		~110~			// Current HP 
    WRITE_SHORT	0x26		~110~			// Maximum HP 
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x60		~15~			// Resist Slashing 
    WRITE_BYTE	0x61		~15~			// Resist Crushing
    WRITE_BYTE	0x62		~15~			// Resist Piercing 
    WRITE_BYTE	0x63		~15~			// Resist Missiles 
    ADD_CRE_ITEM			~B#LEAT01~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~B#SW1H01~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~SHLD24~	#0 #0 #0	~NONE~	~SHIELD~
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN14~	#2 #0 #0	~NONE~	~QITEM2~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6wulf.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_SHORT	0x24		~142~			// Current HP 
    WRITE_SHORT	0x26		~142~			// Maximum HP 
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x60		~40~			// Resist Slashing 
    WRITE_BYTE	0x61		~40~			// Resist Crushing
    WRITE_BYTE	0x62		~40~			// Resist Piercing 
    WRITE_BYTE	0x63		~40~			// Resist Missiles 
    ADD_CRE_ITEM			~B#LEAT01~	#0 #0 #0	~NONE~	~ARMOR~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~c6wulf2.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_SHORT	0x24		~142~			// Current HP 
    WRITE_SHORT	0x26		~142~			// Maximum HP 
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x60		~40~			// Resist Slashing 
    WRITE_BYTE	0x61		~40~			// Resist Crushing
    WRITE_BYTE	0x62		~40~			// Resist Piercing 
    WRITE_BYTE	0x63		~40~			// Resist Missiles 
    ADD_CRE_ITEM			~B#LEAT01~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN12~	#2 #0 #0	~NONE~	~QITEM2~
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/drizzt/bmp~		~override~
     ~RevisedBattles/drizzt/itm/copy~	~override~

ACTION_IF NOT FILE_EXISTS_IN_GAME ~sw1h15.itm~
THEN BEGIN
  COPY ~RevisedBattles/drizzt/itm/sw1h15.itm~ ~override/sw1h15.itm~   
    SAY NAME2 @1001 
    SAY DESC @1002
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~sw1h16.itm~
THEN BEGIN
  COPY ~RevisedBattles/drizzt/itm/sw1h16.itm~ ~override/sw1h16.itm~   
    SAY NAME2 @1003 
    SAY DESC @1004
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~Cattibow.itm~
THEN BEGIN
  COPY ~RevisedBattles/drizzt/itm/Cattibow.itm~ ~override/Cattibow.itm~   
    SAY NAME2 @1005 
    SAY DESC @1006
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~Aegis2.itm~
THEN BEGIN
  COPY ~RevisedBattles/drizzt/itm/Aegis2.itm~ ~override/Aegis2.itm~   
    SAY NAME2 @1063 
    SAY DESC @1064
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~useitem.bcs~
THEN BEGIN
  COMPILE ~RevisedBattles/drizzt/baf/check/useitem.baf~ ~override/useitem.bcs~
END

COMPILE ~RevisedBattles/drizzt/baf/compile~

EXTEND_TOP ~c6wulf2.bcs~			~RevisedBattles/drizzt/baf/dfriends.baf~
EXTEND_TOP ~c6regis2.bcs~			~RevisedBattles/drizzt/baf/dfriends.baf~
EXTEND_TOP ~c6catti2.bcs~			~RevisedBattles/drizzt/baf/dfriends.baf~
EXTEND_TOP ~c6bruen2.bcs~   	           	~RevisedBattles/drizzt/baf/dfriends.baf~
EXTEND_TOP ~c6guen2.bcs~			~RevisedBattles/drizzt/baf/dfriends.baf~
EXTEND_BOTTOM ~c6drizz2.bcs~			~RevisedBattles/drizzt/baf/c6drizz2.baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Mencar Pebblecrusher
////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN @7102
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/mencar/bmp~			~override~
     ~RevisedBattles/mencar/itm~			~override~

COPY ~RevisedBattles/mencar/cre/b#pdad.cre~		~override/b#pdad.cre~
      SAY NAME1 @2070 SAY NAME2 @2070

COPY ~RevisedBattles/mencar/cre/b#pmom.cre~		~override/b#pmom.cre~
      SAY NAME1 @2071 SAY NAME2 @2071

COMPILE ~RevisedBattles/mencar/baf/compile~ 
        ~RevisedBattles/mencar/dlg~
EXTEND_BOTTOM ~sevpat01.bcs~ ~RevisedBattles/mencar/baf/sevpat01.baf~
EXTEND_BOTTOM ~sevpat02.bcs~ ~RevisedBattles/mencar/baf/sevpat02.baf~
EXTEND_BOTTOM ~pooky.bcs~ ~RevisedBattles/mencar/baf/pooky.baf~
EXTEND_BOTTOM ~sevpat04.bcs~ ~RevisedBattles/mencar/baf/sevpat04.baf~
EXTEND_BOTTOM ~sevpat05.bcs~ ~RevisedBattles/mencar/baf/sevpat05.baf~

EXTEND_TOP ~baldur.bcs~	 ~RevisedBattles/mencar/baf/pookpar.baf~

COPY_EXISTING ~sevpat01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x1c		~1000~		// Gold Carried 
    WRITE_ASCII	0x34		~SEVPAT01~ #8	// SmallPortrait 
    WRITE_BYTE	0x52		~2~			// THAC0 
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~4~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~4~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x66		~19~			// Lore
    WRITE_BYTE	0x239		~85~			// Strength Bonus
    ADD_KNOWN_SPELL 		~SPCL152~ 	#0 	~INNATE~
    ADD_MEMORIZED_SPELL 	~SPCL152~ 	#0	~INNATE~ 	#5
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sevpat02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~7500~		// XP
    WRITE_SHORT	0x24		~46~			// Current HP 
    WRITE_SHORT	0x26		~46~			// Maximum HP 
    WRITE_BYTE	0x2d		~66~			// Minor Colour 
    WRITE_BYTE	0x2e		~66~			// Major Colour 
    WRITE_BYTE	0x30		~66~			// Leather Colour 
    WRITE_BYTE	0x31		~29~			// Armor Colour 
    WRITE_BYTE	0x32		~0~			// Hair Colour 
    WRITE_SHORT	0x46		~4~			// AC Natural
    WRITE_SHORT	0x48		~4~			// AC Effective
    WRITE_BYTE	0x52		~16~			// THAC0 
    WRITE_BYTE	0x54		~10~			// Save vs. Death 
    WRITE_BYTE	0x55		~5~			// Save vs. Wand 
    WRITE_BYTE	0x56		~7~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~9~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~6~			// Save vs. Spells 
    WRITE_BYTE	0x66		~18~			// Lore
    WRITE_BYTE	0x234		~18~			// Highest Level Primary Class 
    WRITE_BYTE	0x235		~0~			// Highest Level Second Class 
    WRITE_BYTE	0x236		~0~			// Highest Level Third Class
    WRITE_BYTE	0x238		~15~			// Strength 
    WRITE_BYTE	0x23b		~16~			// Wisdom
    WRITE_BYTE	0x23c		~10~			// Dexterity
    WRITE_BYTE	0x23d		~11~			// Constitution 
    WRITE_BYTE	0x23e		~10~			// Charisma
    WRITE_BYTE	0x23f		~10~			// Morale
    WRITE_BYTE	0x240		~5~			// Morale Break
    WRITE_BYTE	0x242		~60~			// Morale Recovery Time
    ADD_KNOWN_SPELL 		~SPWI113~ 	#0 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI119~ 	#0 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI211~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI219~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI303~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI312~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI319~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI408~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI415~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI418~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI506~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI523~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI602~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI604~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI605~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI609~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI616~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI701~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI713~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI717~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI808~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI812~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI813~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI898~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI905~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI909~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI911~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI913~ 	#8 	~WIZARD~
    ADD_MEMORIZED_SPELL 	~SPWI113~ 	#0	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI119~ 	#0	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI211~ 	#1	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI219~ 	#1	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI303~ 	#2	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI312~ 	#2	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI319~ 	#2	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI408~ 	#3	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI415~ 	#3	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI418~ 	#3	~WIZARD~ 	#2
    ADD_MEMORIZED_SPELL 	~SPWI506~ 	#4	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI523~ 	#4	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI602~ 	#5	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI604~ 	#5	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI605~ 	#5	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI609~ 	#5	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI616~ 	#5	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI701~ 	#6	~WIZARD~ 	#3
    ADD_MEMORIZED_SPELL 	~SPWI713~ 	#6	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI717~ 	#6	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI808~ 	#7	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI812~ 	#7	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI813~ 	#7	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI898~ 	#7	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI905~ 	#8	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI909~ 	#8	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI911~ 	#8	~WIZARD~ 	#1
    ADD_MEMORIZED_SPELL 	~SPWI913~ 	#8	~WIZARD~ 	#1
    REPLACE_CRE_ITEM		~BRAC15~	#0 #0 #0	~NONE~	~GLOVES~
    REPLACE_CRE_ITEM		~CLCK17~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~STAF11~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sevpat03.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~100~			// Gold Carried 
    REPLACE_CRE_ITEM		~B#POOKY~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sevpat04.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~100~			// Gold Carried 
    WRITE_BYTE	0x52		~8~			// THAC0 
    WRITE_BYTE	0x54		~5~			// Save vs. Death 
    WRITE_BYTE	0x55		~7~			// Save vs. Wand 
    WRITE_BYTE	0x56		~6~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~5~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~8~			// Save vs. Spells 
    WRITE_BYTE	0x66		~13~			// Lore
    WRITE_BYTE	0x234		~13~			// Highest Level Primary Class 
    WRITE_BYTE	0x23d		~19~			// Constitution 
    ADD_KNOWN_SPELL 		~SPCL144~ 	#0 	~INNATE~
    ADD_MEMORIZED_SPELL 	~SPCL144~ 	#0	~INNATE~ 	#4
    REPLACE_CRE_ITEM		~LEAT12~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~CLCK02~	#0 #0 #0	~NONE~	~CLOAK~
    ADD_CRE_ITEM			~SW1H51~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~RING07~	#0 #0 #0	~NONE~	~RRING~ 
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sevpat05.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~100~			// Gold Carried 
    WRITE_BYTE	0x52		~10~			// THAC0 
    WRITE_BYTE	0x53		~2~			// Number of Attacks 
    WRITE_BYTE	0x54		~8~			// Save vs. Death 
    WRITE_BYTE	0x55		~4~			// Save vs. Wand 
    WRITE_BYTE	0x56		~7~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~11~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~5~			// Save vs. Spells 
    WRITE_BYTE	0x66		~69~			// Lore
    WRITE_BYTE	0x67		~40~			// Lockpicking
    WRITE_BYTE	0x68		~80~			// Stealth (was 0)
    WRITE_BYTE	0x69		~90~			// Find/Disarm Traps
    WRITE_BYTE	0x6a		~75~			// Pick Pockets
    WRITE_BYTE	0x234		~23~			// Highest Level Primary Class 
    WRITE_BYTE	0x235		~0~			// Highest Level Second Class 
    WRITE_BYTE	0x236		~0~			// Highest Level Third Class
    WRITE_BYTE	0x23a		~10~			// Intelligence 
    WRITE_BYTE	0x23b		~10~			// Wisdom
    WRITE_BYTE	0x23d		~10~			// Constitution 
    WRITE_BYTE	0x23e		~10~			// Charisma
    ADD_KNOWN_SPELL 		~SPCL412~ 	#0 	~INNATE~
    ADD_KNOWN_SPELL 		~SPCL423~ 	#0 	~INNATE~
    ADD_MEMORIZED_SPELL 	~SPCL412~ 	#0	~INNATE~ 	#5
    ADD_MEMORIZED_SPELL 	~SPCL423~ 	#0	~INNATE~ 	#6
    REMOVE_CRE_ITEM		~LEAT05~
    REMOVE_CRE_ITEM		~SW1H08~
    ADD_CRE_ITEM			~SW1H09~	#0 #0 #0	~NONE~	~INV1~
    ADD_CRE_ITEM			~LEAT07~	#0 #0 #0	~NONE~	~INV2~
    REPLACE_CRE_ITEM		~SHLD02~	#0 #0 #0	~NONE~	~SHIELD~
    ADD_CRE_ITEM			~LEAT14~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~AMUL27~	#0 #0 #0	~NONE~	~AMULET~
    ADD_CRE_ITEM			~BELT06~	#0 #0 #0	~NONE~	~BELT~
    ADD_CRE_ITEM			~BOOT04~	#0 #0 #0	~NONE~	~BOOTS~
    ADD_CRE_ITEM			~SW1H28~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~DAGG12~	#0 #0 #0	~NONE~	~WEAPON2~
    ADD_CRE_ITEM			~RING06~	#0 #0 #0	~NONE~	~RRING~
  END
BUT_ONLY_IF_IT_CHANGES


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Mad Cleric
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7103
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY_EXISTING ~dcleric.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_ASCII	0x250		~dcleric~ #8	// Override 
    WRITE_ASCII	0x280		~dcleric~		// Death Variable
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/cleric/bmp~			~override~

ACTION_IF NOT FILE_EXISTS_IN_GAME ~wwundead.spl~ THEN BEGIN
COPY ~RevisedBattles/cleric/spl~	~override~
END

COPY ~RevisedBattles/cleric/cre/dcleric2.cre~		~override/dcleric2.cre~ 
      SAY NAME1 @2001 SAY NAME2 @2001

COMPILE	~RevisedBattles/cleric/baf/compile~
		~RevisedBattles/cleric/dlg~

EXTEND_TOP ~baldur.bcs~	 ~RevisedBattles/cleric/baf/etbaldur.baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved House Jae'llat
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7104
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/jaellat/bmp~			~override~
     ~RevisedBattles/jaellat/itm~			~override~

ACTION_IF NOT FILE_EXISTS_IN_GAME ~useitem.bcs~
THEN BEGIN
  COMPILE ~RevisedBattles/jaellat/baf/check/useitem.baf~ ~override/useitem.bcs~
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~wwundead.spl~ THEN BEGIN
COPY ~RevisedBattles/jaellat/spl/check~			~override~
END

COPY ~RevisedBattles/jaellat/spl~			~override~


COPY ~RevisedBattles/jaellat/cre/b#ist.cre~		~override/b#ist.cre~
      SAY NAME1 @2010 SAY NAME2 @2010

COPY ~RevisedBattles/jaellat/cre/b#spid.cre~		~override/b#spid.cre~
      SAY NAME1 @2011 SAY NAME2 @2011

COMPILE	~RevisedBattles/jaellat/baf~

COPY_EXISTING ~jael01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_ASCII	0x34		~JAEL01~ #8		// SmallPortrait 
    WRITE_ASCII	0x248		~B#JAEL01~ #8		// Override 
    ADD_CRE_ITEM			~RING10~	#0 #0 #0	~NONE~	~RRING~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~jael02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~12000~		// XP
    WRITE_SHORT	0x24		~125~			// Current HP 
    WRITE_SHORT	0x26		~125~			// Maximum HP 
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~0~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~0~			// Save vs. Spells 
    WRITE_BYTE	0x234		~25~			// Highest Level Primary Class 
    WRITE_ASCII	0x248		~B#JAEL02~ #8	// Override 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~jael03.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~20000~		// XP
    WRITE_SHORT	0x24		~211~			// Current HP 
    WRITE_SHORT	0x26		~211~			// Maximum HP 
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x60		~20~			// Resist Slashing 
    WRITE_BYTE	0x61		~20~			// Resist Crushing
    WRITE_BYTE	0x62		~20~			// Resist Piercing 
    WRITE_BYTE	0x63		~20~			// Resist Missiles 
    WRITE_BYTE	0x234		~29~			// Highest Level Primary Class 
    WRITE_BYTE	0x23d		~19~			// Constitution 
    WRITE_BYTE	0x240		~1~			// Morale Break
    WRITE_ASCII	0x248		~B#JAEL03~ #8	// Override 
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    ADD_CRE_ITEM			~BOOT01~	#0 #0 #0	~NONE~	~BOOTS~ 
    ADD_CRE_ITEM			~MINHP1~	#0 #0 #0	~NONE~	~AMULET~	
    ADD_CRE_ITEM			~RING42~	#0 #0 #0	~NONE~	~RRING~ 
    ADD_CRE_ITEM			~POTN52~	#10 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~jael04.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x234		~13~			// Highest Level Primary Class 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x248		~B#JAEL04~ #8	// Override 
    WRITE_ASCII	0x260		~SHOUT~ #8		// General 
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~BOOT01~	#0 #0 #0	~NONE~	~BOOTS~
  END
BUT_ONLY_IF_IT_CHANGES


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Lord Roenall
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7105
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/roenall/bmp~			~override~

COPY_EXISTING ~kproen01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~17500~		// XP
    WRITE_SHORT	0x24		~190~			// Current HP 
    WRITE_SHORT	0x26		~190~			// Maximum HP 
    WRITE_ASCII	0x34		~kproen01~ #8	// SmallPortrait 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~8~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x240		~3~			// Morale Break
    REPLACE_CRE_ITEM		~PLAT13~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~SW1H39~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    REPLACE_CRE_ITEM		~SHLD24~	#0 #0 #0	~NONE~	~SHIELD~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~	
    ADD_CRE_ITEM			~BOOT01~	#0 #0 #0	~NONE~	~BOOTS~
    ADD_CRE_ITEM			~HELM04~	#0 #0 #0	~NONE~	~HELMET~
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/roenall/cre/b#roen02.cre~		~override/b#roen02.cre~
      SAY NAME1 @2020 SAY NAME2 @2020

COPY ~RevisedBattles/roenall/cre/b#roen02.cre~		~override/b#roen03.cre~
      SAY NAME1 @2020 SAY NAME2 @2020
      WRITE_ASCII 0x280 "kproen03"

COPY ~RevisedBattles/roenall/cre/b#roen04.cre~		~override/b#roen04.cre~
      SAY NAME1 @2021 SAY NAME2 @2021

COPY ~RevisedBattles/roenall/cre/b#roen05.cre~		~override/b#roen05.cre~
      SAY NAME1 @2022 SAY NAME2 @2022

COPY ~RevisedBattles/roenall/cre/b#roen06.cre~		~override/b#roen06.cre~
      SAY NAME1 @2023 SAY NAME2 @2023

COPY ~RevisedBattles/roenall/cre/b#roen06.cre~		~override/b#roen07.cre~
      SAY NAME1 @2023 SAY NAME2 @2023
      WRITE_ASCII 0x280 "kproen07"

COMPILE ~RevisedBattles/roenall/baf/compile~

COPY_EXISTING ~AR1304.BCS~	~override~
REPLACE_BCS_BLOCK ~RevisedBattles/roenall/baf/oAR1304.bcs~	~RevisedBattles/roenall/baf/nAR1304.BCS~
BUT_ONLY_IF_IT_CHANGES
EXTEND_BOTTOM ~kproen01.bcs~    ~RevisedBattles/roenall/baf/kproen01.baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Master Brain
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7106
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/brain/cre~			~override~
     ~RevisedBattles/brain/itm~			~override~
     ~RevisedBattles/brain/bam~			~override~

COPY ~RevisedBattles/brain/itm/b#amul02.itm~		~override/b#amul02.itm~
      SAY NAME2 @1061 SAY DESC @1062
      WRITE_ASCII 0x3a "b#amul02"

ACTION_IF FILE_EXISTS_IN_GAME		~dw#illithid.mrk~ THEN BEGIN
  COPY_EXISTING ~udmaster.bcs~	~override~
    REPLACE_BCS_BLOCK ~RevisedBattles/brain/bcs/udmasterscs.bcs~	~RevisedBattles/brain/bcs/udmasterIB.bcs~
BUT_ONLY_IF_IT_CHANGES
END

ACTION_IF NOT FILE_EXISTS_IN_GAME		~dw#illithid.mrk~ THEN BEGIN
  COPY_EXISTING ~udmaster.bcs~	~override~
    REPLACE_BCS_BLOCK ~RevisedBattles/brain/bcs/oudmaster.bcs~	~RevisedBattles/brain/bcs/nudmaster.bcs~
BUT_ONLY_IF_IT_CHANGES
END

COPY_EXISTING ~udmaster.bcs~	~override~
  REPLACE_BCS_BLOCK ~RevisedBattles/brain/bcs/oudmaster1.bcs~	~RevisedBattles/brain/bcs/nudmaster1.bcs~
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~udmaster.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~22780~		// XP
    WRITE_LONG	0x1c		~2000~		// Gold Carried 
    WRITE_SHORT	0x24		~300~			// Current HP 
    WRITE_SHORT	0x26		~300~			// Maximum HP 
    WRITE_SHORT	0x46		~-5~			// AC Natural
    WRITE_SHORT	0x48		~-5~			// AC Effective
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x54		~-10~			// Save vs. Death 
    WRITE_BYTE	0x55		~-10~			// Save vs. Wand 
    WRITE_BYTE	0x56		~-10~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~-10~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~-10~			// Save vs. Spells 
    WRITE_BYTE	0x59		~50~			// Resist Fire 
    WRITE_BYTE	0x5a		~50~			// Resist Cold
    WRITE_BYTE	0x5b		~50~			// Resist Electricity
    WRITE_BYTE	0x5c		~50~			// Resist Acid 
    WRITE_BYTE	0x5d		~50~			// Resist Magic
    WRITE_BYTE	0x5e		~50~			// Resist Magical Fire 
    WRITE_BYTE	0x5f		~50~			// Resist Magical Cold
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~ 
    ADD_CRE_ITEM			~B#AMUL02~	#0 #0 #0	~NONE~	~AMULET~ 
  END
BUT_ONLY_IF_IT_CHANGES


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Wraith Sarevok
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7107
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/sarevok/bmp~			~override~
     ~RevisedBattles/sarevok/bam~			~override~

ACTION_IF NOT FILE_EXISTS_IN_GAME ~sarevo.itm~ THEN BEGIN
COPY      ~RevisedBattles/sarevok/itm/copy~		~override~
END

COPY ~RevisedBattles/sarevok/cre/b#angelo.cre~		~override/b#angelo.cre~
      SAY NAME1 @2030 SAY NAME2 @2030

COPY ~RevisedBattles/sarevok/cre/b#semaj.cre~		~override/b#semaj.cre~
      SAY NAME1 @2031 SAY NAME2 @2031

COPY ~RevisedBattles/sarevok/cre/b#tamoko.cre~		~override/b#tamoko.cre~
      SAY NAME1 @2032 SAY NAME2 @2032

COPY ~RevisedBattles/sarevok/cre/b#tazok.cre~		~override/b#tazok.cre~
      SAY NAME1 @2033 SAY NAME2 @2033

COPY ~RevisedBattles/sarevok/itm/b#amul01.itm~		~override/b#amul01.itm~
      SAY NAME2 @1031 SAY DESC @1032

COPY ~RevisedBattles/sarevok/itm/b#robe03.itm~		~override/b#robe03.itm~
      SAY NAME2 @1033 SAY DESC @1034

COPY ~RevisedBattles/sarevok/itm/b#sbow01.itm~		~override/b#sbow01.itm~
      SAY NAME2 @1035 SAY DESC @1036

COPY ~RevisedBattles/sarevok/itm/b#sbow1a.itm~		~override/b#sbow1a.itm~
      SAY NAME2 @1037 SAY DESC @1038

COPY ~RevisedBattles/sarevok/itm/b#sw2h01.itm~		~override/b#sw2h01.itm~
      SAY NAME2 @1039 SAY DESC @1040
      WRITE_ASCII 0x3a "b#sw2h01"
      WRITE_ASCII 0x76 "b#sw2h01"
      WRITE_ASCII 0xae "b#sw2h01"

COMPILE ~RevisedBattles/sarevok/baf~

COPY_EXISTING ~hellsare.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_ASCII	0x248		~B#SAREVO~ #8	// Override 
    ADD_CRE_ITEM			~MINHP1~	#0 #0 #0	~NONE~	~BELT~
  END
BUT_ONLY_IF_IT_CHANGES

////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Cohrvale, Bregg & Alamas
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7108
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/cohrvale/bmp~			~override~

COPY_EXISTING ~bregg.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~50~			// Gold Carried 
    WRITE_SHORT	0x24		~93~			// Current HP 
    WRITE_SHORT	0x26		~93~			// Maximum HP 
    WRITE_ASCII	0x34		~BREGG~ #8		// SmallPortrait 
    WRITE_BYTE	0x52		~11~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x54		~8~			// Save vs. Death 
    WRITE_BYTE	0x55		~10~			// Save vs. Wand 
    WRITE_BYTE	0x56		~9~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~9~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~11~			// Save vs. Spells 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    REPLACE_CRE_ITEM		~LEAT05~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~SW1H08~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN14~	#2 #0 #0	~NONE~	~QITEM2~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~cohrvale.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~7500~		// XP
    WRITE_LONG	0x1c		~126~			// Gold Carried 
    WRITE_SHORT	0x24		~87~			// Current HP 
    WRITE_SHORT	0x26		~87~			// Maximum HP 
    WRITE_BYTE	0x52		~14~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    REPLACE_CRE_ITEM		~CHAN02~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~SHLD04~	#0 #0 #0	~NONE~	~SHIELD~
    REPLACE_CRE_ITEM		~AX1H02~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN04~	#2 #0 #0	~NONE~	~QITEM2~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~ruffian.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~2500~		// XP
    WRITE_BYTE	0x52		~4~			// THAC0 
    WRITE_BYTE	0x54		~5~			// Save vs. Death 
    WRITE_BYTE	0x55		~7~			// Save vs. Wand 
    WRITE_BYTE	0x56		~6~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~7~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~8~			// Save vs. Spells 
    WRITE_ASCII	0x258		~USEITEM~ #8	// Race 
    REPLACE_CRE_ITEM		~SW1H06~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~PLAT02~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~SW1H06~	#0 #0 #0	~NONE~	~WEAPON2~
    ADD_CRE_ITEM			~POTN52~	#3 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~POTN14~	#1 #0 #0	~NONE~	~QITEM2~
    ADD_CRE_ITEM			~POTN04~	#1 #0 #0	~NONE~	~QITEM3~
  END
BUT_ONLY_IF_IT_CHANGES


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Firkraag
////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN @7109

REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~

AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~


COPY ~RevisedBattles/firkraag/cre/copy~		~override~
     ~RevisedBattles/firkraag/bmp~			~override~
     ~RevisedBattles/firkraag/itm/copy~		~override~
     ~RevisedBattles/firkraag/bam~			~override~
     ~RevisedBattles/firkraag/eff~			~override~
     ~RevisedBattles/firkraag/spl~			~override~     

COMPILE 	~RevisedBattles/firkraag/dlg~
COMPILE	~RevisedBattles/firkraag/baf/compile~

EXTEND_TOP	~ar1200.bcs~                 	~RevisedBattles/firkraag/baf/ar1200.baf~

COPY_EXISTING ~AR1203.ARE~ ~override~ 
  READ_LONG  0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "FIRKRA02" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Lord Jierdan~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~B#FIR01~ #8
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/firkraag/itm/b#firbla.itm~	~override/b#firbla.itm~
      SAY NAME2 @1011 SAY DESC @1012
      WRITE_ASCII 0x3a "b#firbla"
      WRITE_ASCII 0x76 "b#firbla"

COPY ~RevisedBattles/firkraag/itm/b#firfla.itm~	~override/b#firfla.itm~
      SAY NAME2 @1013 SAY DESC @1014
      WRITE_ASCII 0x3a "b#firfla"
      WRITE_ASCII 0x76 "b#firfla"

COPY ~RevisedBattles/firkraag/cre/b#wyv.cre~	~override/b#wyv.cre~
      SAY NAME1 @2100 SAY NAME2 @2100

////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Firkraag NEJ2v691 Compatibility Patch
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7109
SUBCOMPONENT @7119

REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
REQUIRE_COMPONENT ~Setup-NEJ2V691.TP2~ ~0~ ~Never Ending Journey Second Edition v6.91~

COPY - ~WeiDU.log~ ~WeiDU.log~
  READ_2DA_ENTRIES_NOW ~_#_#_#weidu~ 1
  SET good_install = 0
  SET row = 0
  WHILE (good_install = 0 && row < %_#_#_#weidu% - 2) BEGIN
    READ_2DA_ENTRY_FORMER _#_#_#weidu row 0 current_entry
    READ_2DA_ENTRY_FORMER _#_#_#weidu (row + 1) 0 next_entry
    READ_2DA_ENTRY_FORMER _#_#_#weidu (row + 2) 0 third_entry
    PATCH_IF ("%current_entry%" STRING_EQUAL_CASE "~Setup-BGT.tp2~") AND
             ("%next_entry%" STRING_EQUAL_CASE "~Setup-NEJ2V691.TP2~") BEGIN
      PATCH_PRINT ~Proper Installation Detected.
~
      SET good_install = 1
    END    
    SET row += 1
    PATCH_IF ("%current_entry%" STRING_EQUAL_CASE "~Setup-BGT.tp2~") AND
             ("%next_entry%" STRING_EQUAL_CASE "~Setup-BGTMUSIC.TP2~") AND
             ("%third_entry%" STRING_EQUAL_CASE "~Setup-NEJ2V691.TP2~") BEGIN
      PATCH_PRINT ~Proper Installation Detected.
~
      SET good_install = 2
    END
    SET row += 2
  END
ACTION_IF (good_install = 0) BEGIN
  FAIL ~NeJ2 needs to be installed directly after BGT and/or BGTMusic.~
END

COMPILE ~RevisedBattles/firkraag/dlg/NEJv691 Compat~

COPY_EXISTING ~AR1203.BCS~          ~override~
  REPLACE_BCS_BLOCK ~RevisedBattles/firkraag/baf/NEJv691 Compat/oar1203.BCS~  ~RevisedBattles/firkraag/baf/NEJv691 Compat/nar1203.BCS~
BUT_ONLY_IF_IT_CHANGES
EXTEND_BOTTOM ~AR1200.BCS~ 	~RevisedBattles/firkraag/baf/NEJv691 Compat/ar1200.baf~

////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Firkraag FR_ROV Compatibility Patch
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7109
SUBCOMPONENT @7120

REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
REQUIRE_COMPONENT ~Setup-FR_ROV.TP2~ ~0~ ~Freedom's Reign (SoA or ToB)~

COPY_EXISTING ~AR1203.BCS~          ~override~
  REPLACE_BCS_BLOCK ~RevisedBattles/firkraag/baf/FR-ROV Compat/oar1203.BCS~  ~RevisedBattles/firkraag/baf/FR-ROV Compat/nar1203.BCS~
BUT_ONLY_IF_IT_CHANGES

////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Firkraag Romantic Encounters Compatibility Patch
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7109
SUBCOMPONENT @7121

REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
REQUIRE_COMPONENT ~RE/Setup-RE.TP2~ ~17~ ~Firkraag's Unsheathed Sword~

EXTEND_BOTTOM ~B#FIR01.BCS~ 	~RevisedBattles/firkraag/baf/RE Compat/rFirkraag.baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Fire Giants
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7110
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

ACTION_IF NOT FILE_EXISTS ~Data/25Dialog.bif~ THEN BEGIN
  PRINT @7501
END ELSE BEGIN

COPY_EXISTING 	~hgber01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_ASCII	0x34		~HGBER01~ #8	// SmallPortrait 
    WRITE_BYTE	0x5d		~110~			// Resist Magic
    WRITE_BYTE	0x5e		~110~			// Resist Magical Fire 
    WRITE_ASCII	0x248		~B#BERENN~ #8	// Override 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING 	~hgwar01.CRE~	~override~
			~hgwar02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_BYTE	0x5d		~110~			// Resist Magic
    WRITE_ASCII	0x248		~B#FIREGA~ #8	// Override 
    WRITE_ASCII	0x250		~GRPSHT01~ #8	// Class 
  END
BUT_ONLY_IF_IT_CHANGES

COPY	~RevisedBattles/fgiants/bmp~			~override~

COMPILE ~RevisedBattles/fgiants/baf~

END


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Shade Lord
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7111
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

ACTION_IF NOT FILE_EXISTS_IN_GAME ~dw#shadelord.itm~ THEN BEGIN
COPY_EXISTING ~shadel.cre~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT	0x28		~57424~		// Animation ID
    WRITE_BYTE	0x2c		~27~			// Metal Colour 
    WRITE_BYTE	0x2d		~50~			// Minor Colour 
    WRITE_BYTE	0x2e		~52~			// Major Colour 
    WRITE_BYTE	0x2f		~12~			// Skin Colour 
    WRITE_BYTE	0x30		~91~			// Leather Colour 
    WRITE_BYTE	0x31		~63~			// Armor Colour 
    WRITE_BYTE	0x32		~5~			// Hair Colour 
    WRITE_ASCII	0x34		~SHADEL~ #8		// SmallPortrait 
    WRITE_BYTE	0x52		~-4~			// THAC0 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x237		~1~			// Gender 
    WRITE_BYTE	0x23a		~18~			// Intelligence 
    WRITE_BYTE	0x23b		~16~			// Wisdom
    WRITE_ASCII	0x248		~B#LSHA~ #8		// Override 
    ADD_KNOWN_SPELL 		~SPWI119~ 	#0 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI211~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI212~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI219~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI302~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI303~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI312~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI405~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI408~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI415~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI418~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI505~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI506~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI523~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI604~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI605~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI609~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI611~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI616~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI701~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI713~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI717~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI804~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI812~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI897~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI898~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI899~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI902~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI903~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI905~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI909~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI910~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI911~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI913~ 	#8 	~WIZARD~
    ADD_MEMORIZED_SPELL 	~SPWI119~ 	#0	~WIZARD~ 	#5
    ADD_MEMORIZED_SPELL 	~SPWI211~ 	#1 	~WIZARD~	#3
    ADD_MEMORIZED_SPELL 	~SPWI212~ 	#1 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI219~ 	#1 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI302~ 	#2 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI303~ 	#2 	~WIZARD~	#3
    ADD_MEMORIZED_SPELL 	~SPWI312~ 	#2 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI405~ 	#3 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI408~ 	#3 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI415~ 	#3 	~WIZARD~	#3
    ADD_MEMORIZED_SPELL 	~SPWI418~ 	#3 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI505~ 	#4 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI506~ 	#4 	~WIZARD~	#4
    ADD_MEMORIZED_SPELL 	~SPWI523~ 	#4 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI604~ 	#5 	~WIZARD~	#2
    ADD_MEMORIZED_SPELL 	~SPWI605~ 	#5 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI609~ 	#5 	~WIZARD~	#2
    ADD_MEMORIZED_SPELL 	~SPWI611~ 	#5 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI616~ 	#5 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI701~ 	#6 	~WIZARD~	#2
    ADD_MEMORIZED_SPELL 	~SPWI713~ 	#6 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI717~ 	#6 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI804~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI812~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI897~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI898~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI899~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI902~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI903~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI905~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI909~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI910~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI911~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI913~ 	#8 	~WIZARD~	#1
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~shalt01.cre~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~0~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~0~			// Save vs. Spells 
    WRITE_BYTE	0x59		~50~			// Resist Fire 
    WRITE_BYTE	0x5a		~50~			// Resist Cold
    WRITE_BYTE	0x5b		~50~			// Resist Electricity
    WRITE_BYTE	0x5c		~50~			// Resist Acid 
    WRITE_BYTE	0x5e		~50~			// Resist Magical Fire 
    WRITE_BYTE	0x5f		~50~			// Resist Magical Cold
    WRITE_BYTE	0x60		~75~			// Resist Slashing 
    WRITE_BYTE	0x61		~75~			// Resist Crushing
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~rngsha02.cre~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT	0x24		~160~			// Current HP 
    WRITE_SHORT	0x26		~160~			// Maximum HP 
    WRITE_SHORT	0x46		~-7~			// AC Natural
    WRITE_SHORT	0x48		~-7~			// AC Effective
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~0~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~0~			// Save vs. Spells 
    WRITE_BYTE	0x234		~13~			// Highest Level Primary Class 
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    WRITE_BYTE	0x275		~1~			//Gender
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/shade/bmp~			~override~
COMPILE ~RevisedBattles/shade/baf~
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~dw#shadelord.itm~ THEN BEGIN
COPY_EXISTING ~shalt01.bcs~ ~override~
	DECOMPILE_BCS_TO_BAF
	REPLACE_TEXTUALLY ~Delay(18)~ ~Delay(3)~
	COMPILE_BAF_TO_BCS
BUT_ONLY_IF_IT_CHANGES
END

ACTION_IF FILE_EXISTS_IN_GAME ~dw#shadelord.itm~ THEN BEGIN
COPY_EXISTING ~shalt01.bcs~ ~override~
	DECOMPILE_BCS_TO_BAF
	REPLACE_TEXTUALLY ~Delay(6)~ ~Delay(3)~
	COMPILE_BAF_TO_BCS
BUT_ONLY_IF_IT_CHANGES
END

ACTION_IF FILE_EXISTS_IN_GAME ~dw#shadelord.itm~ THEN BEGIN
COPY ~RevisedBattles/shade/bmp~			~override~
EXTEND_TOP ~SHADEL.BCS~ ~RevisedBattles/shade/baf/B#LSHA.baf~
COPY_EXISTING ~shadel.cre~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT	0x28		~57424~		// Animation ID
    WRITE_BYTE	0x2c		~27~			// Metal Colour 
    WRITE_BYTE	0x2d		~50~			// Minor Colour 
    WRITE_BYTE	0x2e		~52~			// Major Colour 
    WRITE_BYTE	0x2f		~12~			// Skin Colour 
    WRITE_BYTE	0x30		~91~			// Leather Colour 
    WRITE_BYTE	0x31		~63~			// Armor Colour 
    WRITE_BYTE	0x32		~5~			// Hair Colour 
    WRITE_ASCII	0x34		~SHADEL~ #8		// SmallPortrait 
    WRITE_BYTE	0x52		~-4~			// THAC0 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x237		~1~			// Gender 
    WRITE_BYTE	0x23a		~18~			// Intelligence
    WRITE_BYTE	0x23b		~16~			// Wisdom
    WRITE_ASCII	0x248		~SHADEL~ #8		// Override 
    ADD_KNOWN_SPELL 		~SPWI119~ 	#0 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI211~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI212~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI219~ 	#1 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI302~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI303~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI312~ 	#2 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI405~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI408~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI415~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI418~ 	#3 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI505~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI506~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI523~ 	#4 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI604~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI605~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI609~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI611~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI616~ 	#5 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI701~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI713~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI717~ 	#6 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI804~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI812~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI897~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI898~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI899~ 	#7 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI902~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI903~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI905~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI909~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI910~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI911~ 	#8 	~WIZARD~
    ADD_KNOWN_SPELL 		~SPWI913~ 	#8 	~WIZARD~
    ADD_MEMORIZED_SPELL 	~SPWI119~ 	#0	~WIZARD~ 	#5
    ADD_MEMORIZED_SPELL 	~SPWI211~ 	#1 	~WIZARD~	#3
    ADD_MEMORIZED_SPELL 	~SPWI212~ 	#1 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI219~ 	#1 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI302~ 	#2 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI303~ 	#2 	~WIZARD~	#3
    ADD_MEMORIZED_SPELL 	~SPWI312~ 	#2 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI405~ 	#3 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI408~ 	#3 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI415~ 	#3 	~WIZARD~	#3
    ADD_MEMORIZED_SPELL 	~SPWI418~ 	#3 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI505~ 	#4 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI506~ 	#4 	~WIZARD~	#4
    ADD_MEMORIZED_SPELL 	~SPWI523~ 	#4 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI604~ 	#5 	~WIZARD~	#2
    ADD_MEMORIZED_SPELL 	~SPWI605~ 	#5 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI609~ 	#5 	~WIZARD~	#2
    ADD_MEMORIZED_SPELL 	~SPWI611~ 	#5 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI616~ 	#5 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI701~ 	#6 	~WIZARD~	#2
    ADD_MEMORIZED_SPELL 	~SPWI713~ 	#6 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI717~ 	#6 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI804~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI812~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI897~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI898~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL 	~SPWI899~ 	#7 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI902~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI903~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI905~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI909~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI910~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI911~ 	#8 	~WIZARD~	#1
    ADD_MEMORIZED_SPELL		~SPWI913~ 	#8 	~WIZARD~	#1
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~shalt01.cre~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~0~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~0~			// Save vs. Spells 
    WRITE_BYTE	0x59		~50~			// Resist Fire 
    WRITE_BYTE	0x5a		~50~			// Resist Cold
    WRITE_BYTE	0x5b		~50~			// Resist Electricity
    WRITE_BYTE	0x5c		~50~			// Resist Acid 
    WRITE_BYTE	0x5e		~50~			// Resist Magical Fire 
    WRITE_BYTE	0x5f		~50~			// Resist Magical Cold
    WRITE_BYTE	0x60		~75~			// Resist Slashing 
    WRITE_BYTE	0x61		~75~			// Resist Crushing
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~rngsha02.cre~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT	0x24		~160~			// Current HP 
    WRITE_SHORT	0x26		~160~			// Maximum HP 
    WRITE_SHORT	0x46		~-7~			// AC Natural
    WRITE_SHORT	0x48		~-7~			// AC Effective
    WRITE_BYTE	0x52		~-8~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~0~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~0~			// Save vs. Spells 
    WRITE_BYTE	0x234		~13~			// Highest Level Primary Class 
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    WRITE_BYTE	0x275		~1~			//Gender
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
  END
BUT_ONLY_IF_IT_CHANGES
END


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Trademeet Crypt
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7112
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

ACTION_IF NOT FILE_EXISTS_IN_GAME	~AR02JC.ARE~	THEN BEGIN
  COPY_EXISTING ~AR2013.ARE~	~override~
    READ_LONG 0x54 "actors_offset"
    READ_ASCII "%actors_offset%"+0x80 "actor_file"
      PATCH_IF (("%actor_file%" STRING_COMPARE_CASE "SKELET01")=0) BEGIN
       WRITE_ASCII "%actors_offset%"+0x00 ~Battle Lich~ #32
       WRITE_ASCII "%actors_offset%"+0x80 ~B#LICH01~
      END
  BUT_ONLY_IF_IT_CHANGES

  COPY_EXISTING ~AR2013.ARE~	~override~
    READ_LONG 0x54 "actor_off"
    READ_SHORT 0x58 "actor_num"
    WHILE ("%actor_num%" > 0) BEGIN
      SET "actor_num" = ("%actor_num%" - 1)
      READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
      PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "SKELET01" = 0) BEGIN
        WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Lich~ #32
        WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~B#LICH02~ #8
      END
    END
  BUT_ONLY_IF_IT_CHANGES
END
ELSE BEGIN
COPY_EXISTING ~AR2013.ARE~ ~override~
 READ_LONG  0x54  "actors_offset"
 READ_SHORT 0x58  "actors_num"
 READ_SHORT 0x5a  "infotrig_num"
 READ_LONG  0x5c  "infotrig_offset"
 READ_LONG  0x60  "spawns_offset"
 READ_LONG  0x64  "spawns_num"
 READ_LONG  0x68  "entrances_offset"
 READ_LONG  0x6c  "entrances_num"
 READ_LONG  0x70  "cont_offset"
 READ_SHORT 0x74  "cont_num"
 READ_SHORT 0x76  "items_num"
 READ_LONG  0x78  "items_offset"
 READ_LONG  0x7c  "vert_offset"
 READ_SHORT 0x80  "vert_num"
 READ_SHORT 0x82  "amb_num"
 READ_LONG  0x84  "amb_offset"
 READ_LONG  0x88  "vars_offset"
 READ_LONG  0x8c  "vars_num"
 READ_LONG  0xa0  "expbmp_offset"
 READ_LONG  0xa4  "doors_num"
 READ_LONG  0xa8  "doors_offset"
 READ_LONG  0xac  "anim_num"
 READ_LONG  0xb0  "anim_offset"
 READ_LONG  0xb4  "tiled_num"
 READ_LONG  0xb8  "tiled_offset"
 READ_LONG  0xbc  "songs_offset"
 READ_LONG  0xc0  "rest_spawns_offset"
 READ_LONG  0xc4  "automap_offset"
 READ_LONG  0xc8  "automap_num"

 SET info_1=1
 FOR( cnt=0; cnt<"%actors_num%"; cnt=cnt+1 ) BEGIN  //actors loop
   READ_ASCII ("%actors_offset%"+0x110*cnt)       "actor_name" (10)
   PATCH_IF (("%actor_name%" STRING_COMPARE_CASE "Battle Lich")=0) BEGIN  //if already exists
     info_1=0
   END
 END

 PATCH_IF (info_1=1) BEGIN             //adding new actor  *******************************
   SET offset = ("%actors_offset%"+0x110*"%actors_num%")
   INSERT_BYTES offset 0x110
   WRITE_ASCII offset ~Battle Lich~
   WRITE_SHORT (offset+0x20) 352          //X
   WRITE_SHORT (offset+0x22) 371          //Y
   WRITE_SHORT (offset+0x24) 352          //destination X
   WRITE_SHORT (offset+0x26) 371          //destination Y
   WRITE_LONG  (offset+0x28) 1            //visible
   WRITE_BYTE  (offset+0x30) 0x02         //unknown
   WRITE_BYTE  (offset+0x31) 0x77         //unknown
   WRITE_LONG  (offset+0x34) 14           //orientation
   WRITE_LONG  (offset+0x38) 0xffffffff   //unknown
   WRITE_LONG  (offset+0x40) 0xffffffff   //schedule
   WRITE_ASCII (offset+0x80) ~B#LICH01~   //creature
   SET "actors_num"="%actors_num%"+1
   WRITE_SHORT 0x58  "%actors_num%"
 END

 SET "info_ext"=0x110*info_1
 PATCH_IF ("%infotrig_offset%">="%actors_offset%") BEGIN
   "infotrig_offset"="%infotrig_offset%"+"%info_ext%"
   WRITE_LONG  0x5c "%infotrig_offset%"
 END
 PATCH_IF ("%spawns_offset%">="%actors_offset%") BEGIN
   "spawns_offset"="%spawns_offset%"+"%info_ext%"
   WRITE_LONG  0x60  "%spawns_offset%"
 END
 PATCH_IF ("%entrances_offset%">="%actors_offset%") BEGIN
   "entrances_offset"="%entrances_offset%"+"%info_ext%"
   WRITE_LONG  0x68  "%entrances_offset%"
 END
 PATCH_IF ("%cont_offset%">="%actors_offset%") BEGIN
   "cont_offset"="%cont_offset%"+"%info_ext%"
   WRITE_LONG  0x70  "%cont_offset%"
 END
 PATCH_IF ("%items_offset%">="%actors_offset%") BEGIN
   "items_offset"="%items_offset%"+"%info_ext%"
   WRITE_LONG  0x78  "%items_offset%"
 END
 PATCH_IF ("%vert_offset%">="%actors_offset%") BEGIN
   "vert_offset"="%vert_offset%"+"%info_ext%"
   WRITE_LONG  0x7c  "%vert_offset%"
 END
 PATCH_IF ("%amb_offset%">="%actors_offset%") BEGIN
   "amb_offset"="%amb_offset%"+"%info_ext%"
   WRITE_LONG  0x84  "%amb_offset%"
 END
 PATCH_IF ("%vars_offset%">="%actors_offset%") BEGIN
   "vars_offset"="%vars_offset%"+"%info_ext%"
   WRITE_LONG  0x88  "%vars_offset%"
 END
 PATCH_IF ("%expbmp_offset%">="%actors_offset%") BEGIN
   "expbmp_offset"="%expbmp_offset%"+"%info_ext%"
   WRITE_LONG  0xa0  "%expbmp_offset%"
 END
 PATCH_IF ("%doors_offset%">="%actors_offset%") BEGIN
   "doors_offset"="%doors_offset%"+"%info_ext%"
   WRITE_LONG  0xa8  "%doors_offset%"
 END
 PATCH_IF ("%anim_offset%">="%actors_offset%") BEGIN
   "anim_offset"="%anim_offset%"+"%info_ext%"
   WRITE_LONG  0xb0  "%anim_offset%"
 END
 PATCH_IF ("%tiled_offset%">="%actors_offset%") BEGIN
   "tiled_offset"="%tiled_offset%"+"%info_ext%"
   WRITE_LONG  0xb8  "%tiled_offset%"
 END
 PATCH_IF ("%songs_offset%">="%actors_offset%") BEGIN
   "songs_offset"="%songs_offset%"+"%info_ext%"
   WRITE_LONG  0xbc  "%songs_offset%"
 END
 PATCH_IF ("%rest_spawns_offset%">="%actors_offset%") BEGIN
   "rest_spawns_offset"="%rest_spawns_offset%"+"%info_ext%"
   WRITE_LONG  0xc0  "%rest_spawns_offset%"
 END
 PATCH_IF ("%automap_offset%">="%actors_offset%") BEGIN
   "automap_offset"="%automap_offset%"+"%info_ext%"
   WRITE_LONG  0xc4  "%automap_offset%"
 END
 BUT_ONLY_IF_IT_CHANGES  //********************************************************  ~AR2013.are~
END

ACTION_IF NOT FILE_EXISTS_IN_GAME ~wwundead.spl~ THEN BEGIN
COPY ~RevisedBattles/trade/spl~			~override~
END

COPY ~RevisedBattles/trade/cre~			~override~

COMPILE ~RevisedBattles/trade/baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Dungeon
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7113
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY	~RevisedBattles/dungeon/cre/copy~	~override~

//Greater Otyugh & script gratefully borrowed from Tactics
COPY_EXISTING ~AR0602.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "IOTYUGH" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Greater Otyugh~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~IOTYUGH1~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR0602.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "IGOLEM02" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Jailkeep Golem~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~IGOLEM02~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR0602.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "IDEMON01" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Cambion~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~IDEMON02~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR0602.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "IGOLFLE1" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Lesser Clay Golem~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~IGOLFLE1~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR0602.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "IGOLFLE2" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Lesser Clay Golem~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~IGOLFLE2~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~ISHADFT1.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~55~			// Gold Carried 
    WRITE_SHORT	0x24		~82~			// Current HP 
    WRITE_SHORT	0x26		~82~			// Maximum HP 
    WRITE_BYTE	0x52		~5~			// THAC0 
    WRITE_BYTE	0x54		~4~			// Save vs. Death 
    WRITE_BYTE	0x55		~4~			// Save vs. Wand 
    WRITE_BYTE	0x56		~4~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~4~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~4~			// Save vs. Spells 
    WRITE_BYTE	0x68		~98~			// Stealth (was 0)
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#SHADTH~ #8	// Class 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~ISHADTH1.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~55~			// Gold Carried 
    WRITE_SHORT	0x24		~62~			// Current HP 
    WRITE_SHORT	0x26		~62~			// Maximum HP 
    WRITE_BYTE	0x52		~5~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x54		~4~			// Save vs. Death 
    WRITE_BYTE	0x55		~4~			// Save vs. Wand 
    WRITE_BYTE	0x56		~4~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~4~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~4~			// Save vs. Spells 
    WRITE_BYTE	0x68		~98~			// Stealth (was 0)
    WRITE_BYTE	0x6e		~2~			// Large Swords Proficiency
    WRITE_BYTE	0x6f		~2~			// Small Swords Proficiency
    WRITE_BYTE	0x238		~14~			// Strength 
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#SHADTH~ #8	// Class 
    ADD_CRE_ITEM			~LEAT02~	#0 #0 #0	~NONE~	~ARMOR~
    ADD_CRE_ITEM			~DAGG15~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~MAGE01~	#0 #0 #0	~NONE~	~RRING~ 
    ADD_CRE_ITEM			~POTN10~	#3 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~ISHADMT1.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~5000~		// XP
    WRITE_LONG	0x1c		~79~			// Gold Carried 
    WRITE_SHORT	0x24		~73~			// Current HP 
    WRITE_SHORT	0x26		~73~			// Maximum HP 
    WRITE_BYTE	0x52		~5~			// THAC0 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~10~			// Highest Level Primary Class 
    WRITE_BYTE	0x235		~10~			// Highest Level Second Class 
    WRITE_ASCII	0x260		~SHADMT01~ #8		// General 
    REPLACE_CRE_ITEM		~SW1H41~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~IDEMON01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~8000~		// XP
    WRITE_LONG	0x1c		~1463~		// Gold Carried 
    WRITE_SHORT	0x24		~100~			// Current HP 
    WRITE_SHORT	0x26		~100~			// Maximum HP 
    WRITE_BYTE	0x52		~5~			// THAC0 
    WRITE_BYTE	0x54		~10~			// Save vs. Death 
    WRITE_BYTE	0x55		~10~			// Save vs. Wand 
    WRITE_BYTE	0x56		~10~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~10~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~10~			// Save vs. Spells 
    WRITE_BYTE	0x60		~5~			// Resist Slashing 
    WRITE_BYTE	0x61		~5~			// Resist Crushing
    WRITE_BYTE	0x62		~5~			// Resist Piercing 
    WRITE_BYTE	0x63		~5~			// Resist Missiles 
    REPLACE_CRE_ITEM		~SW1H42~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~IDEMON02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~8000~		// XP
    WRITE_LONG	0x1c		~1463~		// Gold Carried 
    WRITE_SHORT	0x24		~100~			// Current HP 
    WRITE_SHORT	0x26		~100~			// Maximum HP 
    WRITE_BYTE	0x52		~5~			// THAC0 
    WRITE_BYTE	0x54		~10~			// Save vs. Death 
    WRITE_BYTE	0x55		~10~			// Save vs. Wand 
    WRITE_BYTE	0x56		~10~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~10~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~10~			// Save vs. Spells 
    WRITE_BYTE	0x60		~5~			// Resist Slashing 
    WRITE_BYTE	0x61		~5~			// Resist Crushing
    WRITE_BYTE	0x62		~5~			// Resist Piercing 
    WRITE_BYTE	0x63		~5~			// Resist Missiles 
    REPLACE_CRE_ITEM		~SW1H42~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
  END
BUT_ONLY_IF_IT_CHANGES

COMPILE ~RevisedBattles/dungeon/baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Temple Sewers Party
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7114
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY_EXISTING ~berkref.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~10000~		// XP
    WRITE_LONG	0x1c		~741~			// Gold Carried 
    WRITE_SHORT	0x24		~178~			// Current HP 
    WRITE_SHORT	0x26		~178~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~19~			// Highest Level Primary Class 
    WRITE_BYTE	0x238		~18~			// Strength 
    WRITE_BYTE	0x239		~27~			// Strength Bonus
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#TAR01~ #8	// Class 
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    REPLACE_CRE_ITEM		~PLAT06~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~SHLD30~	#0 #0 #0	~NONE~	~SHIELD~
    REPLACE_CRE_ITEM		~BLUN32~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~draug.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~10000~		// XP
    WRITE_SHORT	0x24		~199~			// Current HP 
    WRITE_SHORT	0x26		~199~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~22~			// Highest Level Primary Class 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#TAR02~ #8	// Class 
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    REPLACE_CRE_ITEM		~SHLD29~	#0 #0 #0	~NONE~	~SHIELD~
    ADD_CRE_ITEM			~BOOT01~	#0 #0 #0	~NONE~	~BOOTS~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~gaius.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~10000~		// XP
    WRITE_SHORT	0x24		~95~			// Current HP 
    WRITE_SHORT	0x26		~95~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~21~			// Highest Level Primary Class 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#TAR03~ #8	// Class 
    WRITE_ASCII	0x268		~USEITEM~ #8	// Default 
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~gall.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~8000~		// XP
    WRITE_SHORT	0x24		~125~			// Current HP 
    WRITE_SHORT	0x26		~125~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~15~			// Highest Level Primary Class 
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#TAR04~ #8	// Class 
    WRITE_ASCII	0x260		~USEITEM~ #8	// General 
    REPLACE_CRE_ITEM		~AROW07~	#50#0 #0	~NONE~	~QUIVER1~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

ACTION_IF NOT FILE_EXISTS_IN_GAME ~deitm011~ THEN BEGIN
COPY_EXISTING ~gall.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    ADD_CRE_ITEM			~BOW17~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~SW1H06~	#0 #0 #0	~NONE~	~WEAPON2~
  END
BUT_ONLY_IF_IT_CHANGES
END

COPY_EXISTING ~rengaa.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~10000~		// XP
    WRITE_LONG	0x1c		~20~			// Gold Carried 
    WRITE_SHORT	0x24		~145~			// Current HP 
    WRITE_SHORT	0x26		~145~			// Maximum HP 
    WRITE_BYTE	0x2c		~100~			// Metal Colour 
    WRITE_BYTE	0x2d		~100~			// Minor Colour 
    WRITE_BYTE	0x2e		~100~			// Major Colour 
    WRITE_BYTE	0x2f		~84~			// Skin Colour 
    WRITE_BYTE	0x30		~51~			// Leather Colour 
    WRITE_BYTE	0x31		~100~			// Armor Colour 
    WRITE_BYTE	0x32		~200~			// Hair Colour 
    WRITE_SHORT	0x46		~-6~			// AC Natural
    WRITE_SHORT	0x48		~-6~			// AC Effective
    WRITE_SHORT	0x4c		~-6~			// AC Missile 
    WRITE_BYTE	0x52		~-6~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x5d		~55~			// Resist Magic
    WRITE_BYTE	0x6e		~3~			// Large Swords Proficiency
    WRITE_BYTE	0x6f		~3~			// Small Swords Proficiency
    WRITE_BYTE	0x70		~3~			// Bows Proficiency
    WRITE_BYTE	0x71		~3~			// Spears Proficiency
    WRITE_BYTE	0x72		~3~			// Blunt Proficiency
    WRITE_BYTE	0x73		~3~			// Spiked Proficiency
    WRITE_BYTE	0x74		~3~			// Axe Proficiency
    WRITE_BYTE	0x75		~3~			// Missile Proficiency
    WRITE_BYTE	0x234		~22~			// Highest Level Primary Class 
    WRITE_BYTE	0x238		~17~			// Strength 
    WRITE_BYTE	0x23a		~14~			// Intelligence 
    WRITE_BYTE	0x23b		~11~			// Wisdom
    WRITE_BYTE	0x23c		~18~			// Dexterity
    WRITE_BYTE	0x23d		~18~			// Constitution 
    WRITE_BYTE	0x23e		~10~			// Charisma
    WRITE_ASCII	0x248		~SHOUT~ #8		// Override 
    WRITE_ASCII	0x250		~B#TAR05~ #8	// Class 
    REPLACE_CRE_ITEM		~B#ROBE02~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~MFIST6~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~POTN55~	#3 #0 #0	~NONE~	~QITEM1~ 
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM2~ 
    ADD_CRE_ITEM			~BRAC19~	#0 #0 #0	~NONE~	~GLOVES~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~tarnor.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~10000~		// XP
    WRITE_LONG	0x1c		~173~			// Gold Carried 
    WRITE_SHORT	0x24		~199~			// Current HP 
    WRITE_SHORT	0x26		~199~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~18~			// Highest Level Primary Class 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x250		~SHOUT~ #8		// Class 
    WRITE_ASCII	0x260		~B#TAR06~ #8	// General 
    REPLACE_CRE_ITEM		~SHLD29~	#0 #0 #0	~NONE~	~SHIELD~
    ADD_CRE_ITEM			~BOOT01~	#0 #0 #0	~NONE~	~BOOTS~
    ADD_CRE_ITEM			~HELM04~	#0 #0 #0	~NONE~	~HELMET~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~ 
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/sewers/bmp~			~override~

ACTION_IF NOT FILE_EXISTS_IN_GAME	~wwundead.spl~ THEN BEGIN
COPY    ~RevisedBattles/sewers/spl~			~override~
END

COPY ~RevisedBattles/sewers/itm/b#robe02.itm~		~override/b#robe02.itm~
      SAY NAME2 @1021 SAY DESC @1022

COMPILE ~RevisedBattles/sewers/baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Kiser Jhaeri
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7115
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

ACTION_IF NOT FILE_EXISTS ~Data/25Dialog.bif~ THEN BEGIN
  PRINT @7501
END ELSE BEGIN

APPEND ~SPELL.IDS~ ~4934 GREATER_WHIRLWIND_ATTACK~ UNLESS ~4934 GREATER_WHIRLWIND_ATTACK~
APPEND ~SPELL.IDS~ ~4935 CRITICAL_STRIKE~ UNLESS ~4935 CRITICAL_STRIKE~

ACTION_IF FILE_EXISTS ~script compiler/AICompile.exe~ THEN BEGIN
  COPY_EXISTING +	~SPELL.IDS~      ~script compiler~
END

//adding 1 new proximity trigger and 4 new vertices for it to AR5014.ARE
COPY_EXISTING ~AR5014.ARE~  ~override~
 READ_LONG  0x54  "actors_offset"
 READ_SHORT 0x58  "actors_num"
 READ_SHORT 0x5a  "infotrig_num"
 READ_LONG  0x5c  "infotrig_offset"
 READ_LONG  0x60  "spawns_offset"
 READ_LONG  0x64  "spawns_num"
 READ_LONG  0x68  "entrances_offset"
 READ_LONG  0x6c  "entrances_num"
 READ_LONG  0x70  "cont_offset"
 READ_SHORT 0x74  "cont_num"
 READ_SHORT 0x76  "items_num"
 READ_LONG  0x78  "items_offset"
 READ_LONG  0x7c  "vert_offset"
 READ_SHORT 0x80  "vert_num"
 READ_SHORT 0x82  "amb_num"
 READ_LONG  0x84  "amb_offset"
 READ_LONG  0x88  "vars_offset"
 READ_LONG  0x8c  "vars_num"
 READ_LONG  0xa0  "expbmp_offset"
 READ_LONG  0xa4  "doors_num"
 READ_LONG  0xa8  "doors_offset"
 READ_LONG  0xac  "anim_num"
 READ_LONG  0xb0  "anim_offset"
 READ_LONG  0xb4  "tiled_num"
 READ_LONG  0xb8  "tiled_offset"
 READ_LONG  0xbc  "songs_offset"
 READ_LONG  0xc0  "rest_spawns_offset"
 READ_LONG  0xc4  "automap_offset"
 READ_LONG  0xc8  "automap_num"

//adding 1 new proximity triggers ************************************************
   SET offset = ("%infotrig_offset%"+0xc4*"%infotrig_num%")
   INSERT_BYTES offset 0xc4
   WRITE_ASCII offset ~Trap 01~
   WRITE_SHORT (offset+0x20) 0              //proximity trigger
   WRITE_SHORT (offset+0x22) 950            //bounding box
   WRITE_SHORT (offset+0x24) 573            //bounding box
   WRITE_SHORT (offset+0x26) 1043           //bounding box
   WRITE_SHORT (offset+0x28) 642            //bounding box
   WRITE_SHORT (offset+0x2a) 4              //vertices number
   WRITE_LONG  (offset+0x2c) "%vert_num%"   //first vertex index
   WRITE_LONG  (offset+0x34) 0              //cursor frame number
   WRITE_LONG  (offset+0x60) 8              //flags
   WRITE_SHORT (offset+0x68) 90             //Trap Detection
   WRITE_SHORT (offset+0x6a) 100            //Trap Removal
   WRITE_SHORT (offset+0x6c) 1              //Yup, it's trapped alrighty
   WRITE_SHORT (offset+0x6e) 0              //And not detected
   WRITE_SHORT (offset+0x70) 955            //Trap location X
   WRITE_SHORT (offset+0x72) 570            //Trap location Y
   WRITE_ASCII (offset+0x7c) ~B#SPIKET~     //Trap script
   SET offset = offset+0xc4
   SET "infotrig_num"="%infotrig_num%"+1
   WRITE_SHORT 0x5a  "%infotrig_num%"

   SET "info_ext"=0xc4
   PATCH_IF ("%actors_offset%">="%infotrig_offset%") BEGIN
     "actors_offset"="%actors_offset%"+"%info_ext%"
     WRITE_LONG  0x54 "%actors_offset%"
   END
   PATCH_IF ("%spawns_offset%">="%infotrig_offset%") BEGIN
     "spawns_offset"="%spawns_offset%"+"%info_ext%"
     WRITE_LONG  0x60  "%spawns_offset%"
   END
   PATCH_IF ("%entrances_offset%">="%infotrig_offset%") BEGIN
     "entrances_offset"="%entrances_offset%"+"%info_ext%"
     WRITE_LONG  0x68  "%entrances_offset%"
   END
   PATCH_IF ("%cont_offset%">="%infotrig_offset%") BEGIN
     "cont_offset"="%cont_offset%"+"%info_ext%"
     WRITE_LONG  0x70  "%cont_offset%"
   END
   PATCH_IF ("%items_offset%">="%infotrig_offset%") BEGIN
     "items_offset"="%items_offset%"+"%info_ext%"
     WRITE_LONG  0x78  "%items_offset%"
   END
   PATCH_IF ("%vert_offset%">="%infotrig_offset%") BEGIN
     "vert_offset"="%vert_offset%"+"%info_ext%"
     WRITE_LONG  0x7c  "%vert_offset%"
   END
   PATCH_IF ("%amb_offset%">="%infotrig_offset%") BEGIN
     "amb_offset"="%amb_offset%"+"%info_ext%"
     WRITE_LONG  0x84  "%amb_offset%"
   END
   PATCH_IF ("%vars_offset%">="%infotrig_offset%") BEGIN
     "vars_offset"="%vars_offset%"+"%info_ext%"
     WRITE_LONG  0x88  "%vars_offset%"
   END
   PATCH_IF ("%expbmp_offset%">="%infotrig_offset%") BEGIN
     "expbmp_offset"="%expbmp_offset%"+"%info_ext%"
     WRITE_LONG  0xa0  "%expbmp_offset%"
   END
   PATCH_IF ("%doors_offset%">="%infotrig_offset%") BEGIN
     "doors_offset"="%doors_offset%"+"%info_ext%"
     WRITE_LONG  0xa8  "%doors_offset%"
   END
   PATCH_IF ("%anim_offset%">="%infotrig_offset%") BEGIN
     "anim_offset"="%anim_offset%"+"%info_ext%"
     WRITE_LONG  0xb0  "%anim_offset%"
   END
   PATCH_IF ("%tiled_offset%">="%infotrig_offset%") BEGIN
     "tiled_offset"="%tiled_offset%"+"%info_ext%"
     WRITE_LONG  0xb8  "%tiled_offset%"
   END
   PATCH_IF ("%songs_offset%">="%infotrig_offset%") BEGIN
     "songs_offset"="%songs_offset%"+"%info_ext%"
     WRITE_LONG  0xbc  "%songs_offset%"
   END
   PATCH_IF ("%rest_spawns_offset%">="%infotrig_offset%") BEGIN
     "rest_spawns_offset"="%rest_spawns_offset%"+"%info_ext%"
     WRITE_LONG  0xc0  "%rest_spawns_offset%"
   END
   PATCH_IF ("%automap_offset%">="%infotrig_offset%") BEGIN
     "automap_offset"="%automap_offset%"+"%info_ext%"
     WRITE_LONG  0xc4  "%automap_offset%"
   END

  //adding 4 new vertices for triggers
   SET offset = ("%vert_offset%"+0x04*"%vert_num%")
   INSERT_BYTES offset (0x04*4)
   WRITE_SHORT  offset      950
   WRITE_SHORT  (offset+2)  600
   WRITE_SHORT  (offset+4)  971
   WRITE_SHORT  (offset+6)  573
   WRITE_SHORT  (offset+8)  1043
   WRITE_SHORT  (offset+10) 615
   WRITE_SHORT  (offset+12) 1022
   WRITE_SHORT  (offset+14) 642
   SET offset = offset + 4*4
   SET "vert_num"="%vert_num%"+4
   WRITE_SHORT 0x80  "%vert_num%"

   SET "info_ext"=0x04*4
   PATCH_IF ("%actors_offset%">="%vert_offset%") BEGIN
     "actors_offset"="%actors_offset%"+"%info_ext%"
     WRITE_LONG  0x54 "%actors_offset%"
   END
   PATCH_IF ("%spawns_offset%">="%vert_offset%") BEGIN
     "spawns_offset"="%spawns_offset%"+"%info_ext%"
     WRITE_LONG  0x60  "%spawns_offset%"
   END
   PATCH_IF ("%entrances_offset%">="%vert_offset%") BEGIN
     "entrances_offset"="%entrances_offset%"+"%info_ext%"
     WRITE_LONG  0x68  "%entrances_offset%"
   END
   PATCH_IF ("%cont_offset%">="%vert_offset%") BEGIN
     "cont_offset"="%cont_offset%"+"%info_ext%"
     WRITE_LONG  0x70  "%cont_offset%"
   END
   PATCH_IF ("%items_offset%">="%vert_offset%") BEGIN
     "items_offset"="%items_offset%"+"%info_ext%"
     WRITE_LONG  0x78  "%items_offset%"
   END
   PATCH_IF ("%infotrig_offset%">="%vert_offset%") BEGIN
     "infotrig_offset"="%infotrig_offset%"+"%info_ext%"
     WRITE_LONG  0x5c  "%infotrig_offset%"
   END
   PATCH_IF ("%amb_offset%">="%vert_offset%") BEGIN
     "amb_offset"="%amb_offset%"+"%info_ext%"
     WRITE_LONG  0x84  "%amb_offset%"
   END
   PATCH_IF ("%vars_offset%">="%vert_offset%") BEGIN
     "vars_offset"="%vars_offset%"+"%info_ext%"
     WRITE_LONG  0x88  "%vars_offset%"
   END
   PATCH_IF ("%expbmp_offset%">="%vert_offset%") BEGIN
     "expbmp_offset"="%expbmp_offset%"+"%info_ext%"
     WRITE_LONG  0xa0  "%expbmp_offset%"
   END
   PATCH_IF ("%doors_offset%">="%vert_offset%") BEGIN
     "doors_offset"="%doors_offset%"+"%info_ext%"
     WRITE_LONG  0xa8  "%doors_offset%"
   END
   PATCH_IF ("%anim_offset%">="%vert_offset%") BEGIN
     "anim_offset"="%anim_offset%"+"%info_ext%"
     WRITE_LONG  0xb0  "%anim_offset%"
   END
   PATCH_IF ("%tiled_offset%">="%vert_offset%") BEGIN
     "tiled_offset"="%tiled_offset%"+"%info_ext%"
     WRITE_LONG  0xb8  "%tiled_offset%"
   END
   PATCH_IF ("%songs_offset%">="%vert_offset%") BEGIN
     "songs_offset"="%songs_offset%"+"%info_ext%"
     WRITE_LONG  0xbc  "%songs_offset%"
   END
   PATCH_IF ("%rest_spawns_offset%">="%vert_offset%") BEGIN
     "rest_spawns_offset"="%rest_spawns_offset%"+"%info_ext%"
     WRITE_LONG  0xc0  "%rest_spawns_offset%"
   END
   PATCH_IF ("%automap_offset%">="%vert_offset%") BEGIN
     "automap_offset"="%automap_offset%"+"%info_ext%"
     WRITE_LONG  0xc4  "%automap_offset%"
   END

BUT_ONLY_IF_IT_CHANGES  //********************************************************  ~AR5014.are~

COPY_EXISTING ~AR5014.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "SARKIS02" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Kiser's Bodyguard~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~SARKIS03~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR5014.ARE~	~override~
  READ_LONG 0x54 "actors_offset"
  READ_ASCII "%actors_offset%"+0x80 "actor_file"
    PATCH_IF (("%actor_file%" STRING_COMPARE_CASE "SARKIS03")=0) BEGIN
     WRITE_ASCII "%actors_offset%"+0x00 ~Kiser's Bodyguard~ #32
     WRITE_ASCII "%actors_offset%"+0x80 ~SARKIS02~
    END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR5014.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "SARGRD04" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Fighter~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~B#KISFIT~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR5014.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "SARGRD05" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Thief~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~B#KISTHF~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~AR5014.ARE~	~override~
  READ_LONG 0x54 "actor_off"
  READ_SHORT 0x58 "actor_num"
  WHILE ("%actor_num%" > 0) BEGIN
    SET "actor_num" = ("%actor_num%" - 1)
    READ_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) "cre_file"
    PATCH_IF ("%cre_file%" STRING_COMPARE_CASE "SARGRD06" = 0) BEGIN
      WRITE_ASCII ("%actor_off%" +        ("%actor_num%" * 0x110)) ~Thief~ #32
      WRITE_ASCII ("%actor_off%" + 0x80 + ("%actor_num%" * 0x110)) ~B#KISWIZ~ #8
    END
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/kiser/cre/copy~			~override~
     ~RevisedBattles/kiser/bmp~			~override~

COPY_EXISTING ~sarkis01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~7500~		// XP
    WRITE_SHORT	0x24		~137~			// Current HP 
    WRITE_SHORT	0x26		~137~			// Maximum HP 
    WRITE_ASCII	0x34		~SARKIS01~ #8	// SmallPortrait 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x54		~4~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~3~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~7~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~2~			// Save vs. Spells 
    WRITE_ASCII	0x250		~SARKIS01~ #8	// Class 
    ADD_KNOWN_SPELL 		~SPCL423~ 	#0 	~INNATE~
    ADD_MEMORIZED_SPELL 	~SPCL423~ 	#0	~INNATE~ 	#5
    REMOVE_CRE_ITEM		~DAGG15~
    REPLACE_CRE_ITEM		~LEAT15~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~DAGG24~	#0 #0 #0	~NONE~	~WEAPON2~	EQUIP
    ADD_CRE_ITEM			~POTN55~	#5 #0 #0	~NONE~	~QITEM3~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sarkis04.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~7500~		// XP
    WRITE_SHORT	0x24		~137~			// Current HP 
    WRITE_SHORT	0x26		~137~			// Maximum HP 
    WRITE_ASCII	0x34		~SARKIS01~ #8	// SmallPortrait 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x54		~4~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~3~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~7~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~2~			// Save vs. Spells 
    ADD_KNOWN_SPELL 		~SPCL423~ 	#0 	~INNATE~
    ADD_MEMORIZED_SPELL 	~SPCL423~ 	#0	~INNATE~ 	#5
    REMOVE_CRE_ITEM		~DAGG15~
    REPLACE_CRE_ITEM		~LEAT15~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
    ADD_CRE_ITEM			~DAGG24~	#0 #0 #0	~NONE~	~WEAPON2~	EQUIP
    ADD_CRE_ITEM			~POTN55~	#5 #0 #0	~NONE~	~QITEM3~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sarkis02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~8000~		// XP
    WRITE_SHORT	0x24		~152~			// Current HP 
    WRITE_SHORT	0x26		~152~			// Maximum HP 
    WRITE_BYTE	0x52		~3~			// THAC0 
    WRITE_BYTE	0x53		~2~			// Number of Attacks 
    WRITE_BYTE	0x240		~2~			// Morale Break
    WRITE_ASCII	0x248		~SARKIS02~ #8	// Override 
    WRITE_ASCII	0x250		~GRPSHT01~ #8	// Class 
    REPLACE_CRE_ITEM		~LEAT12~	#0 #0 #0	~NONE~	~ARMOR~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sarkis03.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~8000~		// XP
    WRITE_SHORT	0x24		~167~			// Current HP 
    WRITE_SHORT	0x26		~167~			// Maximum HP 
    WRITE_BYTE	0x52		~3~			// THAC0 
    WRITE_BYTE	0x53		~2~			// Number of Attacks 
    WRITE_BYTE	0x240		~2~			// Morale Break
    WRITE_ASCII	0x248		~SARKIS03~ #8	// Override 
    WRITE_ASCII	0x250		~GRPSHT01~ #8	// Class 
    REPLACE_CRE_ITEM		~CHAN07~	#0 #0 #0	~NONE~	~ARMOR~
  END
BUT_ONLY_IF_IT_CHANGES

COMPILE ~RevisedBattles/kiser/baf/compile~
EXTEND_TOP	~SARKIS01.BCS~	~RevisedBattles/kiser/baf/tkis01.baf~
EXTEND_BOTTOM	~SARKIS01.BCS~	~RevisedBattles/kiser/baf/bkis01.baf~
EXTEND_BOTTOM	~SARKIS02.BCS~	~RevisedBattles/kiser/baf/bkis02.baf~
EXTEND_BOTTOM	~SARKIS03.BCS~	~RevisedBattles/kiser/baf/bkis03.baf~

END


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Falahar
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7116
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COMPILE	~RevisedBattles/falahar/baf~
		~RevisedBattles/falahar/dlg~

COPY_EXISTING ~demfig01.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~15000~		// XP
    WRITE_SHORT	0x24		~191~			// Current HP 
    WRITE_SHORT	0x26		~191~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~23~			// Highest Level Primary Class 
    WRITE_BYTE	0x240		~3~			// Morale Break
    WRITE_ASCII	0x248		~GPSHOUT~ #8	// Override 
    WRITE_ASCII	0x250		~B#DEMFIG~ #8	// Class 
    WRITE_ASCII	0x02cc	~DEMFIG01~ #8	// Dialog File
    REPLACE_CRE_ITEM		~PLAT13~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~HALB05~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    REPLACE_CRE_ITEM		~HELM07~	#0 #0 #0	~NONE~	~HELMET~
    ADD_CRE_ITEM			~BOOT01~	#0 #0 #0	~NONE~	~BOOTS~
    ADD_CRE_ITEM			~SW1H08~	#0 #0 #0	~NONE~	~WEAPON2~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~demfig02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~15000~		// XP
    WRITE_SHORT	0x24		~151~			// Current HP 
    WRITE_SHORT	0x26		~151~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~20~			// Highest Level Primary Class 
    WRITE_BYTE	0x240		~4~			// Morale Break
    WRITE_ASCII	0x250		~B#DEMFIG~ #8	// Class 
    WRITE_ASCII	0x258		~GPSHOUT~ #8	// Race 
    WRITE_ASCII	0x02cc	~DEMFIG02~ #8	// Dialog File
    REPLACE_CRE_ITEM		~PLAT09~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~SW1H39~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~HELM04~	#0 #0 #0	~NONE~	~HELMET~
    ADD_CRE_ITEM			~SHLD04~	#0 #0 #0	~NONE~	~SHIELD~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~demmag.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~12000~		// XP
    WRITE_SHORT	0x24		~81~			// Current HP 
    WRITE_SHORT	0x26		~81~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~21~			// Highest Level Primary Class 
    WRITE_ASCII	0x250		~B#DEMMAG~ #8	// Class 
    WRITE_ASCII	0x02cc	~DEMMAG~ #8		// Dialog File
    REPLACE_CRE_ITEM		~BRAC15~	#0 #0 #0	~NONE~	~GLOVES~
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~dempri.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~9000~		// XP
    WRITE_SHORT	0x24		~128~			// Current HP 
    WRITE_SHORT	0x26		~128~			// Maximum HP 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~4~			// Number of Attacks 
    WRITE_BYTE	0x54		~1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~1~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~1~			// Save vs. Spells 
    WRITE_BYTE	0x234		~19~			// Highest Level Primary Class 
    WRITE_ASCII	0x248		~GPSHOUT~ #8	// Override 
    WRITE_ASCII	0x250		~B#DEMCLE~ #8	// Class 
    REPLACE_CRE_ITEM		~PLAT10~	#0 #0 #0	~NONE~	~ARMOR~
    REPLACE_CRE_ITEM		~BLUN18~	#0 #0 #0	~NONE~	~WEAPON1~	EQUIP
    ADD_CRE_ITEM			~POTN52~	#5 #0 #0	~NONE~	~QITEM1~
  END
BUT_ONLY_IF_IT_CHANGES


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Drow Pit Fights
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7117
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY_EXISTING ~UDBEHO02.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~32000~		// XP
    WRITE_SHORT	0x24		~150~			// Current HP 
    WRITE_SHORT	0x26		~150~			// Maximum HP 
    WRITE_SHORT	0x46		~-5~			// AC Natural
    WRITE_SHORT	0x48		~-5~			// AC Effective
    WRITE_SHORT	0x4c		~-7~			// AC Missile 
    WRITE_BYTE	0x52		~0~			// THAC0 
    WRITE_BYTE	0x53		~3~			// Number of Attacks 
    WRITE_BYTE	0x54		~-1~			// Save vs. Death 
    WRITE_BYTE	0x55		~1~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~-1~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~2~			// Save vs. Spells 
    WRITE_BYTE	0x60		~40~			// Resist Slashing 
    WRITE_BYTE	0x61		~40~			// Resist Crushing
    WRITE_BYTE	0x62		~40~			// Resist Piercing 
    WRITE_BYTE	0x63		~40~			// Resist Missiles 
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~UDNABA.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~16000~		// XP
    WRITE_SHORT	0x24		~113~			// Current HP 
    WRITE_SHORT	0x26		~113~			// Maximum HP 
    WRITE_SHORT	0x46		~-7~			// AC Natural
    WRITE_SHORT	0x48		~-7~			// AC Effective
    WRITE_BYTE	0x52		~6~			// THAC0 
    WRITE_BYTE	0x54		~5~			// Save vs. Death 
    WRITE_BYTE	0x55		~7~			// Save vs. Wand 
    WRITE_BYTE	0x56		~6~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~7~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~8~			// Save vs. Spells 
    WRITE_BYTE	0x60		~30~			// Resist Slashing 
    WRITE_BYTE	0x61		~30~			// Resist Crushing
    WRITE_BYTE	0x62		~30~			// Resist Piercing 
    WRITE_BYTE	0x63		~30~			// Resist Missiles 
    WRITE_BYTE	0x240		~2~			// Morale Break
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~UDSAHA.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~24000~		// XP
    WRITE_SHORT	0x24		~145~			// Current HP 
    WRITE_SHORT	0x26		~145~			// Maximum HP 
    WRITE_SHORT	0x46		~0~			// AC Natural
    WRITE_SHORT	0x48		~0~			// AC Effective
    WRITE_BYTE	0x52		~-3~			// THAC0 
    WRITE_BYTE	0x54		~5~			// Save vs. Death 
    WRITE_BYTE	0x55		~7~			// Save vs. Wand 
    WRITE_BYTE	0x56		~6~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~7~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~8~			// Save vs. Spells 
    WRITE_BYTE	0x60		~40~			// Resist Slashing 
    WRITE_BYTE	0x61		~40~			// Resist Crushing
    WRITE_BYTE	0x62		~40~			// Resist Piercing 
    WRITE_BYTE	0x63		~40~			// Resist Missiles 
    WRITE_BYTE	0x240		~1~			// Morale Break
  END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~UDUMBER.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_LONG	0x14		~12000~		// XP
    WRITE_SHORT	0x24		~120~			// Current HP 
    WRITE_SHORT	0x26		~120~			// Maximum HP 
    WRITE_SHORT	0x46		~-3~			// AC Natural
    WRITE_SHORT	0x48		~-3~			// AC Effective
    WRITE_BYTE	0x52		~6~			// THAC0 
    WRITE_BYTE	0x54		~6~			// Save vs. Death 
    WRITE_BYTE	0x55		~8~			// Save vs. Wand 
    WRITE_BYTE	0x56		~7~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~8~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~9~			// Save vs. Spells 
    WRITE_BYTE	0x60		~25~			// Resist Slashing 
    WRITE_BYTE	0x61		~25~			// Resist Crushing
    WRITE_BYTE	0x62		~25~			// Resist Piercing 
    WRITE_BYTE	0x63		~25~			// Resist Missiles 
  END
BUT_ONLY_IF_IT_CHANGES


////////////////////////////////////////////////////////////////////////////////////////////////////
// Improved Chromatic Demon
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7118
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY_EXISTING ~GORCHR.CRE~	~override~
  PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // protects against invalid files
    WRITE_SHORT	0x46		~-10~			// AC Natural
    WRITE_SHORT	0x48		~-10~			// AC Effective
    WRITE_BYTE	0x52		~-10~			// THAC0 
    WRITE_BYTE	0x53		~5~			// Number of Attacks 
    WRITE_BYTE	0x54		~0~			// Save vs. Death 
    WRITE_BYTE	0x55		~0~			// Save vs. Wand 
    WRITE_BYTE	0x56		~0~			// Save vs. Polymorph 
    WRITE_BYTE	0x57		~0~			// Save vs. Attacks 
    WRITE_BYTE	0x58		~0~			// Save vs. Spells 
    WRITE_BYTE	0x60		~40~			// Resist Slashing 
    WRITE_BYTE	0x61		~40~			// Resist Crushing
    WRITE_BYTE	0x62		~40~			// Resist Piercing 
    WRITE_BYTE	0x63		~40~			// Resist Missiles 
    WRITE_BYTE	0x238		~24~			// Strength 
    WRITE_BYTE	0x240		~2~			// Morale Break
  END
BUT_ONLY_IF_IT_CHANGES

COPY ~RevisedBattles/chromat/cre/b#chrfir.cre~		~override/b#chrfir.cre~
      SAY NAME1 @2090 SAY NAME2 @2090
      
COPY ~RevisedBattles/chromat/cre/b#chrair.cre~		~override/b#chrair.cre~
      SAY NAME1 @2091 SAY NAME2 @2091

COPY ~RevisedBattles/chromat/cre/b#chrice.cre~		~override/b#chrice.cre~
      SAY NAME1 @2092 SAY NAME2 @2092

COPY ~RevisedBattles/chromat/cre/b#chrear.cre~		~override/b#chrear.cre~
      SAY NAME1 @2093 SAY NAME2 @2093

EXTEND_BOTTOM	~GORCHR.BCS~	~RevisedBattles/chromat/baf/bgorchr.baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Knights of Dark Renown
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7201
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/knights/bmp~			~override~
     ~RevisedBattles/knights/are~			~override~

APPEND ~MASTAREA.2DA~
~b#AR01  value~
	UNLESS ~b#AR01~

COPY ~RevisedBattles/knights/cre/b#knit01.cre~		~override/b#knit01.cre~
      SAY NAME1 @2050 SAY NAME2 @2050

COPY ~RevisedBattles/knights/cre/b#knit02.cre~		~override/b#knit02.cre~
      SAY NAME1 @2051 SAY NAME2 @2051

COPY ~RevisedBattles/knights/cre/b#knit03.cre~		~override/b#knit03.cre~
      SAY NAME1 @2052 SAY NAME2 @2052

COPY ~RevisedBattles/knights/cre/b#knit04.cre~		~override/b#knit04.cre~
      SAY NAME1 @2053 SAY NAME2 @2053

COPY ~RevisedBattles/knights/cre/b#knit05.cre~		~override/b#knit05.cre~
      SAY NAME1 @2054 SAY NAME2 @2054

COPY ~RevisedBattles/knights/cre/b#knit06.cre~		~override/b#knit06.cre~
      SAY NAME1 @2055 SAY NAME2 @2055

COPY ~RevisedBattles/knights/cre/b#knit07.cre~		~override/b#knit07.cre~
      SAY NAME1 @2056 SAY NAME2 @2056

COPY ~RevisedBattles/knights/cre/b#knit08.cre~		~override/b#knit08.cre~
      SAY NAME1 @2057 SAY NAME2 @2057

COPY ~RevisedBattles/knights/cre/b#knitlg.cre~		~override/b#knitlg.cre~
      SAY NAME1 @2058 SAY NAME2 @2058

COPY ~RevisedBattles/knights/cre/b#knitjd.cre~		~override/b#knitjd.cre~
      SAY NAME1 @2059 SAY NAME2 @2059

COPY ~RevisedBattles/knights/cre/b#knits1.cre~		~override/b#knits1.cre~
      SAY NAME1 @2060 SAY NAME2 @2060

COPY ~RevisedBattles/knights/cre/b#knits2.cre~		~override/b#knits2.cre~
      SAY NAME1 @2060 SAY NAME2 @2060

COPY ~RevisedBattles/knights/cre/b#knits3.cre~		~override/b#knits3.cre~
      SAY NAME1 @2060 SAY NAME2 @2060

COPY ~RevisedBattles/knights/itm/b#note01.itm~		~override/b#note01.itm~
      SAY NAME2 @1051 SAY DESC @1052

COPY ~RevisedBattles/knights/itm/b#sw1h06.itm~		~override/b#sw1h06.itm~
      SAY NAME2 @1053 SAY DESC @1054

COMPILE ~RevisedBattles/knights/baf/compile~
        ~RevisedBattles/knights/dlg~
USING   ~RevisedBattles/Language/%s/b#knight.tra~

EXTEND_TOP ~baldur.bcs~				~RevisedBattles/knights/baf/b#knitsp.baf~
EXTEND_TOP ~baldur.bcs~				~RevisedBattles/knights/baf/b#fallen.baf~
EXTEND_TOP ~ar0406.bcs~				~RevisedBattles/knights/baf/b#ar0406.baf~


////////////////////////////////////////////////////////////////////////////////////////////////////
// Arcane Avenger Kit
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7301
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/arcane/copy~			~override~

COPY ~RevisedBattles/arcane/b#arc01.spl~		~override/b#arc01.spl~
      SAY NAME1 @4004 SAY NAME2 @4004

COPY ~RevisedBattles/arcane/b#arc05.spl~		~override/b#arc05.spl~
      SAY NAME1 @4005 SAY NAME2 @4005

COPY ~RevisedBattles/arcane/b#arc06.spl~		~override/b#arc06.spl~
      SAY NAME1 @4006 SAY NAME2 @4006

// "internal" name of kit
ADD_KIT ~ARCANE~

// CLASWEAP.2DA
~ARCANE		1	1	1	1	1	1	1	1~

// WEAPPROF.2DA, starting with line 3
~ARCANE 1 5 1 1 5 1 1 5 1 1 1 1 1 1 1 5 1 1 1 1 1 1 5 1 1 1 5 5 2 2 2 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5~

// ABCLASRQ.2DA
~ARCANE		9	0	0	15	10	0~

// ABCLSMOD.2DA
~ARCANE		0	0	0	0	0	0~

// ABDCDSRQ.2DA
~ARCANE		0	0	0	0	0	0~

// ABDCSCRQ.2DA
~ARCANE		15	0	0	18	0	0~

// ALIGNMNT.2DA
~ARCANE		0	0	0	1	1	1	0	0	0~

// DUALCLAS.2DA
~ARCANE		0	0	1	0	0	0~

// abilities 2DA file
~RevisedBattles/arcane/arcane.2da~

// KITTABLE.2DA
~K_F_H  K_F_E  K_F_G~

// KITLIST.2DA
~0x00000000	2~

// LUABBR.2DA
~Fi0~

// 25STWEAP.2DA
~CHAN09 * HELM07 BAG20 RING06 RING31 * BOOT01 AMUL19 BRAC16 BELT06 AROW11,40 BULL03,40 BOL06,40 POTN52,5 POTN04,2 POTN14,5 HAMM07 SW1H27 STAF08~

// Strings for lower, mixed and help descriptions
SAY @4001
SAY @4002
SAY @4003

////////////////////////////////////////////////////////////////////////////////////////////////////
// Blademaster Kit
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7302
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY    ~RevisedBattles/blade/lub#b.2da~		~override/lub#b.2da~
        ~RevisedBattles/blade/copy~			~override~

COPY    ~RevisedBattles/blade/spl/b#dance.spl~		~override/b#dance.spl~
         SAY NAME1 @4014 SAY NAME2 @4014

ADD_KIT ~B#BLADE~

//CLASWEAP.2DA
~B#BLADE	1	1	1	1	1	1	1	1~

//WEAPPROF.2DA
~B#BLADE 5 5 1 1 1 1 1 1 5 5 5 1 5 5 5 5 1 1 1 1 1 1 1 1 1 1 1 1 2 0 2 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5~

//ABCLASRQ.2DA
~B#BLADE	12	13	0	12	0	0~

//ABCLSMOD.2DA
~B#BLADE	0	0	0	0	0	0~

//ABDCDSRQ.2DA
~B#BLADE	0	0	0	0	0	0~

//ABDCSCRQ.2DA
~B#BLADE	0	0	0	0	0	0~

//ALIGNMNT.2DA
~B#BLADE	1	1	1	1	1	1	1	1	1~

//DUALCLAS.2DA
~B#BLADE	0	0	0	0	0	0~

//abilities see "clabrn02.2da" for eg.
~RevisedBattles/blade/b#blade.2da~

//KITTABLE.2DA, B#SWORD only Human or Half-Elf
~K_F_H  K_F_HE~

//KITLIST.2DA
~0x00010000	2~

//High Level Ability Abbreviation, see LUABBR.2DA for eg.
~B#B~

//TOB starting equipment list, see 25STWEAP.2DA
~LEAT20 * HELM07 BAG28 RING09 RING05 CLCK26 BOOT01 AMUL19 BRAC09 BELT02 * * * POTN52,5 POTN04,2 POTN14,5 MISC3P SW1H75 SW1H51~

//strings -> lower, mixed and help descriptions
SAY @4011
SAY @4012
SAY @4013

////////////////////////////////////////////////////////////////////////////////////////////////////
// Demon Knight Kit
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7303
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY    ~RevisedBattles/demon/lub#d.2da~		~override/lub#d.2da~
        ~RevisedBattles/demon/copy~			~override~

COPY    ~RevisedBattles/demon/spl/b#dfear.spl~		~override/b#dfear.spl~
         SAY NAME1 @4024 SAY NAME2 @4024

COPY    ~RevisedBattles/demon/spl/b#dsum.spl~		~override/b#dsum.spl~
         SAY NAME1 @4025 SAY NAME2 @4025

COPY    ~RevisedBattles/demon/spl/b#dinvis.spl~	~override/b#dinvis.spl~
         SAY NAME1 @4026 SAY NAME2 @4026

COMPILE ~RevisedBattles/demon/baf~

ADD_KIT ~B#DEMON~

//CLASWEAP.2DA
~B#DEMON	1	1	1	0	0	1	1	1~

//WEAPPROF.2DA
~B#DEMON 5 1 0 1 1 1 1 0 5 5 1 1 5 1 1 1 1 1 1 5 1 1 1 0 0 0 0 0 2 0 2 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5~

//ABCLASRQ.2DA
~B#DEMON	13	13	0	0	0	0~

//ABCLSMOD.2DA
~B#DEMON	0	0	0	0	-10	-10~

//ABDCDSRQ.2DA
~B#DEMON	0	0	0	0	0	0~

//ABDCSCRQ.2DA
~B#DEMON	0	0	0	0	0	0~

//ALIGNMNT.2DA
~B#DEMON	0	0	0	0	0	0	0	0	1~

//DUALCLAS.2DA
~B#DEMON	0	0	0	0	0	0~

//abilities see clabrn02.2da for eg.
~RevisedBattles/demon/b#demon.2da~

//KITTABLE.2DA, BDEMON only Human
~K_F_H~

//KITLIST.2DA
~0x00000001	2~

//High Level Ability Abbreviation, see LUABBR.2DA
~B#D~

//TOB starting equipment list, see 25STWEAP.2DA
~PLAT05 * HELM07 BAG28 RING02 RING06 CLCK26 BOOT01 AMUL19 BRAC10 BELT02 * * * POTN52,5 POTN04,2 POTN14,5 MISC3P HALB05 SW2H08~

//strings -> lower, mixed and help descriptions
SAY @4021
SAY @4022
SAY @4023

////////////////////////////////////////////////////////////////////////////////////////////////////
// Bastard Kit
////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN @7304
AT_INTERACTIVE_EXIT ~VIEW RevisedBattles\README-RevisedBattles.html~

COPY ~RevisedBattles/bastard/copy~			~override~

COPY ~RevisedBattles/bastard/b#bas01.spl~		~override/b#bas01.spl~
      SAY NAME1 @4034 SAY NAME2 @4034

COPY ~RevisedBattles/bastard/b#bas02.spl~		~override/b#bas02.spl~
      SAY NAME1 @4035 SAY NAME2 @4035

COPY ~RevisedBattles/bastard/b#bas03.spl~		~override/b#bas03.spl~
      SAY NAME1 @4036 SAY NAME2 @4036

COPY ~RevisedBattles/bastard/b#bas04a.spl~		~override/b#bas04a.spl~
      SAY NAME1 @4037 SAY NAME2 @4037

COPY ~RevisedBattles/bastard/b#bas05.spl~		~override/b#bas05.spl~
      SAY NAME1 @4038 SAY NAME2 @4038

COPY ~RevisedBattles/bastard/b#bas06.spl~		~override/b#bas06.spl~
      SAY NAME1 @4039 SAY NAME2 @4039

COPY ~RevisedBattles/bastard/b#bas07.spl~		~override/b#bas07.spl~
      SAY NAME1 @4040 SAY NAME2 @4040

COPY ~RevisedBattles/bastard/b#bas02a.spl~		~override/b#bas02a.spl~
      SAY NAME1 @4041 SAY NAME2 @4041

COPY ~RevisedBattles/bastard/b#bas02b.spl~		~override/b#bas02b.spl~
      SAY NAME1 @4042 SAY NAME2 @4042

COPY ~RevisedBattles/bastard/b#bas02c.spl~		~override/b#bas02c.spl~
      SAY NAME1 @4043 SAY NAME2 @4043

COPY ~RevisedBattles/bastard/b#bas04a.cre~		~override/b#bas04a.cre~
      SAY NAME1 @4044 SAY NAME2 @4044
      
COPY ~RevisedBattles/bastard/b#bas04b.cre~		~override/b#bas04b.cre~
      SAY NAME1 @4045 SAY NAME2 @4045

COPY ~RevisedBattles/bastard/b#bas04b.spl~		~override/b#bas04b.spl~
      SAY NAME1 @4046 SAY NAME2 @4046 SAY UNIDENTIFIED_DESC @4047

// "internal" name of kit
ADD_KIT ~BASTARD~

// CLASWEAP.2DA
~BASTARD	1	1	0	1	1	0	0	0~

// WEAPPROF.2DA, starting with line 3
~BASTARD 3 3 0 0 0 0 0 0 3 0 3 0 0 0 0 3 0 0 0 0 0 0 0 3 0 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0~

// ABCLASRQ.2DA
~BASTARD	9	0	0	0	0	0~

// ABCLSMOD.2DA
~BASTARD	0	0	0	0	0	-8~

// ABDCDSRQ.2DA
~BASTARD	0	0	0	0	0	0~

// ABDCSCRQ.2DA
~BASTARD	15	0	0	0	0	0~

// ALIGNMNT.2DA
~BASTARD	0	0	0	0	0	0	0	1	1~

// DUALCLAS.2DA
~BASTARD	1	0	1	1	0	0~

// abilities 2DA file
~RevisedBattles/bastard/bastard.2da~

// KITTABLE.2DA
~K_F_H  K_F_D  K_F_HO~

// KITLIST.2DA
~0x00000000	2~

// LUABBR.2DA
~B#T~

// 25STWEAP.2DA
~LEAT14 * * BAG28 RING06 RING05,10 * BOOT01 AMUL19 * BELT06 BOLT02,40 BOLT06,40 BOLT03,40 POTN52,5 POTN10,2 * XBOW10 SW1H27 SW1H39~

// Strings for lower, mixed and help descriptions
SAY @4031
SAY @4032
SAY @4033


//////////////////////////////////////////////////////////////////////////////////////////////////
// Add .CRE Proficiencies, Abilites, & Effects
/////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN @7601
REQUIRE_COMPONENT ~Setup-RevisedBattles.TP2~ ~0~ ~Requires Improved Battles - "erebusant's Patching Version" v6~
PRINT @7602

////Proficiency Modification Table (233)
<<<<<<<< PROF_EFF.TBL

CREATURE		PROF_TYPE	NECESSARY_STARS

sevpat01.CRE	97		2
sevpat01.CRE	100		5
sevpat01.CRE	114		3

sevpat04.cre	90		1
sevpat04.cre	94		5
sevpat04.cre	95		2
sevpat04.cre	113		2

sevpat05.cre	90		1
sevpat05.cre	91		1
sevpat05.cre	96		1
sevpat05.cre	103		1
sevpat05.cre	105		1
sevpat05.cre	106		1
sevpat05.cre	113		1

bregg.cre		91		5
bregg.cre		113		2

cohrvale.cre	92		5
cohrvale.cre	112		2

ruffian.cre		90		5
ruffian.cre		114		3

sarkis01.cre	91		5
sarkis01.cre	114		1
sarkis04.cre	91		5
sarkis04.cre	114		1

>>>>>>>>

// Movement Rate Modification Table //(126)
<<<<<<<< MOVE_EFF.TBL

CREATURE		MOD_TYPE	VALUE	

sevpat01.CRE	0		2
hellsare.cre	2		400
rengaa.cre		0		5

>>>>>>>>

//  Resistance to Crushing/Slashing/Missile etc. Table
<<<<<<<< AC_RES.TBL

CREATURE		AC_TYPE	VALUE

sevpat01.CRE	0		20


>>>>>>>>

//  Attack Speed Table (190)
<<<<<<<< ATK_SPD.TBL

CREATURE		MOD_TYPE	VALUE

sevpat04.CRE	0		4
rengaa.cre		0		3

>>>>>>>>

//  Attack Damage Bonus Table
<<<<<<<< ATK_DAM.TBL

CREATURE		MOD_TYPE	VALUE

sevpat04.CRE	0		4
sevpat05.CRE	0		1

>>>>>>>>


//  Thac0 Bonus Table
<<<<<<<< THAC0_BONUS.TBL

CREATURE		MOD_TYPE	VALUE

sevpat04.CRE	0		4

>>>>>>>>

//  Armor Class Modification Table
<<<<<<<< ARM_CLS.TBL

CREATURE		MOD_TYPE	VALUE

sevpat04.CRE	0		2

>>>>>>>>

//  Use EFF Type Modification Table
<<<<<<<< USE_EFF.TBL

CREATURE		IDS_TYPE	TARGET_TYPE

sevpat05.CRE	2		0

>>>>>>>>

//  Use Backstab Bonus Modification Table
<<<<<<<< BACKSTAB_BONUS.TBL

CREATURE		MOD_TYPE	VALUE

sevpat05.CRE	0		2

>>>>>>>>

//  Use Attacks Per Round Modification Table
<<<<<<<< ATK_RND.TBL

CREATURE		MOD_TYPE	INDEX

c6drizz.CRE		1		5
c6drizz2.CRE	1		5
c6drizz3.CRE	1		5
c6guen.cre		1		5
c6guen2.cre		1		5
firarc01.cre	1		2

>>>>>>>>

//  Use Immunity to Effect Modification Table (101)
<<<<<<<< IMM_EFF.TBL

CREATURE		SUB_TYPE	INDEX

c6drizz.CRE		5		0
c6drizz2.CRE	5		0
c6drizz3.CRE	5		0
c6drizz2.CRE	216		0
c6drizz3.CRE	216		0
c6guen.cre		5		0
c6guen.cre		13		0
c6guen.cre		216		0
c6guen2.cre		5		0
c6guen2.cre		13		0
c6guen2.cre		216		0
udmaster.cre	13		0
udmaster.cre	55		0
rengaa.cre		5		0
rengaa.cre		25		0
rengaa.cre		40		0

>>>>>>>>

//  Use Invisibilty Effect Modification Table
<<<<<<<< INV_EFF.TBL

CREATURE		SUB_TYPE	INDEX

c6guen.cre		0		0
c6guen2.cre		0		0
shadel.cre		0		0

>>>>>>>>

//  Use Blur Effect Modification Table
<<<<<<<< BLR_EFF.TBL

CREATURE		SUB_TYPE	INDEX

c6guen.cre		0		0
c6guen2.cre		0		0

>>>>>>>>

//  Use Haste Effect Modification Table
<<<<<<<< HST_EFF.TBL

CREATURE		SUB_TYPE	INDEX

c6guen2.cre		0		0

>>>>>>>>

//  Use Immune to Timestop Modification Table (310)
<<<<<<<< IMM_TMSTP.TBL

CREATURE		SUB_TYPE	INDEX

c6guen.cre		0		0
c6guen2.cre		0		0
udmaster.cre	0		0
hellsare.cre	0		0

>>>>>>>>

//  Use Detect Invisibility Modification Table (193)
<<<<<<<< INV_DTK.TBL

CREATURE		SUB_TYPE	INDEX

c6guen.cre		1		0
c6guen2.cre		1		0
jael01.cre		1		0
rengaa.cre		1		0

>>>>>>>>

//  Use Immunity to Backstab Modification Table
<<<<<<<< IMM_BKSTB.TBL

CREATURE		SUB_TYPE	INDEX

c6guen.cre		1		0
c6guen2.cre		1		0
udmaster.cre	1		0

>>>>>>>>

//  Use Immunity to Spell Level Modification Table
<<<<<<<< IMM_SPL.TBL

CREATURE		SUB_TYPE	INDEX

c6guen.cre		0		1
c6guen2.cre		0		1
c6guen.cre		0		2
c6guen2.cre		0		2
c6guen.cre		0		3
c6guen2.cre		0		3
c6guen.cre		0		4
c6guen2.cre		0		4
c6guen.cre		0		5
c6guen2.cre		0		5
c6guen.cre		0		6
c6guen2.cre		0		6
c6guen.cre		0		7
c6guen2.cre		0		7
c6guen.cre		0		8
c6guen2.cre		0		8
c6guen.cre		0		9
c6guen2.cre		0		9

>>>>>>>>

//  Use Immunity to Weapons Level Modification Table
<<<<<<<< IMM_WPN.TBL

CREATURE		SUB_TYPE	INDEX

udmaster.cre	0		1
udmaster.cre	0		2

>>>>>>>>

  COPY + ~IMM_WPN.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=120 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+20) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%index%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%index%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    120              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~IMM_SPL.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=102 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+20) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%index%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%index%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    102              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~IMM_BKSTB.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=292 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    292              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~INV_DTK.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=193 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    193              //Type
            WRITE_LONG   offset+12   5                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~IMM_TMSTP.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=310 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    310              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~HST_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=16 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    16               //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~BLR_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=65 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    65               //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~INV_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=20 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    20               //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~IMM_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "sub_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=101 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%sub_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%sub_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    101              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"		//
            WRITE_LONG   offset+24   "%sub_type%"	//
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~ATK_RND.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "index"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=1 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+20) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%index%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%index%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    1                //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%index%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   1                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~BACKSTAB_BONUS.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=263 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%mod_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    263              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~USE_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "ids_type"
    READ_2DA_ENTRY cntg  2 3 "target_type"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=177 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%ids_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+24) "%ids_type%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    177              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+24   "%ids_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~THAC0_BONUS.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=278 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%mod_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    278              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~ATK_DAM.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=73 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%mod_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    73               //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~ARM_CLS.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=0 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%mod_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    0                //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~ATK_SPD.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=190 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%mod_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    190              //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~AC_RES.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "ac_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=86 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%ac_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    86               //Type
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%ac_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~AC_RES.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "ac_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=87 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%ac_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    87               //Modify proficiences
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%ac_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~AC_RES.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "ac_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=88 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%ac_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    88               //Modify proficiences
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%ac_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~AC_RES.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "ac_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=89 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%ac_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    89               //Modify proficiences
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%ac_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~MOVE_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "mod_type"
    READ_2DA_ENTRY cntg  2 3 "value"

    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=126 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "mod_type2"
              PATCH_IF ("%mod_type2%" = "%mod_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%value%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    126              //Modify proficiences
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%value%"
            WRITE_LONG   offset+24   "%mod_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

  COPY + ~PROF_EFF.TBL~  ~RevisedBattles/tmp.tbl~
  COUNT_2DA_ROWS 3 "rows_cnt"
  FOR( cntg=0; cntg<"%rows_cnt%"; cntg=cntg+1 ) BEGIN
    READ_2DA_ENTRY cntg  0 3 "table_file_name"
    READ_2DA_ENTRY cntg  1 3 "prof_type"
    READ_2DA_ENTRY cntg  2 3 "stars"


    SET fileExistsInGame = 0
    INNER_PATCH_FILE "%table_file_name%" BEGIN
      PATCH_IF (~%SOURCE_SIZE%~) BEGIN
        SET fileExistsInGame = 1
      END
    END
    PATCH_IF fileExistsInGame=1 THEN BEGIN
      INNER_ACTION BEGIN
        COPY_EXISTING "%table_file_name%"  ~override~  //patching the file from the current table entry
          READ_LONG  0x2a0  "known_spells_offset"
          READ_LONG  0x2a4  "known_spells_num"
          READ_LONG  0x2a8  "spell_memorization_offset"
          READ_LONG  0x2ac  "spell_memorization_num"
          READ_LONG  0x2b0  "spell_memorized_offset"
          READ_LONG  0x2b4  "spell_memorized_num"
          READ_LONG  0x2b8  "item_slots_offset"
          READ_LONG  0x2bc  "items_offset"
          READ_LONG  0x2c0  "items_num"
          READ_LONG  0x2c4  "effects_offset"
          READ_LONG  0x2c8  "effects_num"
          //**********************************************************************************************************
          // 1st protection : it's necessary to set a valid offset for "effects_offset"
          //                  it could contain some invalid values
          PATCH_IF( "%effects_num%"=0 ) BEGIN
            "effects_offset" = "%spell_memorization_offset%"+"%spell_memorization_num%"*0x10
             WRITE_LONG  0x2c4 "%effects_offset%"
          END
          //**********************************************************************************************************
          SET found = 0
          FOR( cnt=0; cnt<"%effects_num%"; cnt=cnt+1 ) BEGIN
            READ_LONG ("%effects_offset%"+cnt*0x108+8)  "type"
            PATCH_IF( "%type%"=233 ) BEGIN
              READ_LONG ("%effects_offset%"+cnt*0x108+24) "prof_type2"
              PATCH_IF ("%prof_type2%" = "%prof_type%") BEGIN
                SET found=1
                WRITE_LONG ("%effects_offset%"+cnt*0x108+20) "%stars%"
              END
            END
          END
          PATCH_IF(found=0) BEGIN
            SET offset = ("%effects_offset%"+0x108*"%effects_num%")
            INSERT_BYTES offset      0x108
            WRITE_LONG   offset+8    233              //Modify proficiences
            WRITE_LONG   offset+12   1                //TargetSelf
            WRITE_LONG   offset+20   "%stars%"
            WRITE_LONG   offset+24   "%prof_type%"
            WRITE_LONG   offset+28   9                //Instant/Permanent After Bonuses
            WRITE_LONG   offset+36   100              //Probability
            WRITE_LONG  0x2c8  "%effects_num%"+1
            SET "info_ext" = 0x108
            PATCH_IF ("%known_spells_offset%">="%effects_offset%") BEGIN
              "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
              WRITE_LONG  0x2a0 "%known_spells_offset%"
            END
            PATCH_IF ("%spell_memorization_offset%">="%effects_offset%") BEGIN
              "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
              WRITE_LONG  0x2a8  "%spell_memorization_offset%"
            END
            PATCH_IF ("%item_slots_offset%">="%effects_offset%") BEGIN
              "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
              WRITE_LONG  0x2b8  "%item_slots_offset%"
            END
            PATCH_IF ("%items_offset%">="%effects_offset%") BEGIN
              "items_offset"="%items_offset%"+"%info_ext%"
              WRITE_LONG  0x2bc  "%items_offset%"
            END
            PATCH_IF ("%spell_memorized_offset%">="%effects_offset%") BEGIN
              "spell_memorized_offset"="%spell_memorized_offset%"+"%info_ext%"
              WRITE_LONG  0x2b0  "%spell_memorized_offset%"
            END
          END
        BUT_ONLY_IF_IT_CHANGES
      END
    END
  END

//The following code blatantly hijacked from Nythrun because frankly... it fixes a bunch of fucked up files.

DEFINE_PATCH_MACRO fj_cre_validity BEGIN
LOCAL_SET temp_0 = 0x02d4
LOCAL_SET temp_1 = 0x02d4
LOCAL_SET temp_2 = 0x02d4
LOCAL_SET temp_3 = 0x0000
LOCAL_SPRINT signature ~CRE V1.0~
SET valid = 0x01
PATCH_IF ~%SOURCE_RES%~ STRING_EQUAL_CASE charbase BEGIN
SET valid = 0x00
PATCH_PRINT ~We do not tamper with charbase.cre lightly.~
END ELSE BEGIN
PATCH_IF SOURCE_SIZE < 0x2d4 BEGIN
SET valid = 0x00
PATCH_PRINT ~%SOURCE_FILE% is corrupt: below minium length.~
END ELSE BEGIN
READ_ASCII 0x000 signature
PATCH_IF ~%signature%~ STR_CMP ~CRE V1.0~ BEGIN
SET valid = 0x00
PATCH_PRINT ~%SOURCE_FILE% is corrupt: header misplaced.~
END ELSE BEGIN
DEFINE_ASSOCIATIVE_ARRAY cre_offset BEGIN
0x02a0 => 0x02a4
0x02a8 => 0x02ac
0x02b0 => 0x02b4
0x02b8 => 0x02c0
0x02bc => 0x02c0
0x02c4 => 0x02c8
END
PHP_EACH cre_offset AS temp => temp_1 BEGIN
READ_LONG temp_0 temp_2
READ_LONG temp_1 temp_3
PATCH_IF temp_3 = 0x00 && temp_2 < 0x2d4 BEGIN
WRITE_LONG temp_0 0x2d4
END
PATCH_IF temp_3 != 0x00 && temp_2 < 0x2d4 BEGIN
SET valid = 0x00
PATCH_PRINT ~%SOURCE_FILE% is corrupt: extended structures pointed to header.~
END
END
END
END
END
END
DEFINE_PATCH_MACRO fj_enforce_cre_order BEGIN
LOCAL_SET eff = 0x00
LOCAL_SET kso = 0x2d4
LOCAL_SET ksc = 0x00
LOCAL_SET smo = 0x2d4
LOCAL_SET smc = 0x00
LOCAL_SET mso = 0x2d4
LOCAL_SET msc = 0x00
LOCAL_SET iso = 0x2d4
LOCAL_SET ilo = 0x2d4
LOCAL_SET ilc = 0x00
LOCAL_SET elo = 0x2d4
LOCAL_SET elc = 0x00
LOCAL_SET i_0 = 0x00
LOCAL_SET off_0 = 0x00
LOCAL_SET off_1 = 0x00
LOCAL_SET temp_0 = 0x00
LOCAL_SET temp_1 = 0x00
LOCAL_SPRINT ks fail
LOCAL_SPRINT sm fail
LOCAL_SPRINT ms fail
LOCAL_SPRINT is fail
LOCAL_SPRINT il fail
LOCAL_SPRINT el fail
READ_BYTE 0x0033 eff
READ_LONG 0x02a0 kso
READ_LONG 0x02a4 ksc
READ_LONG 0x02a8 smo
READ_LONG 0x02ac smc
READ_LONG 0x02b0 mso
READ_LONG 0x02b4 msc
READ_LONG 0x02b8 iso
READ_LONG 0x02bc ilo
READ_LONG 0x02c0 ilc
READ_LONG 0x02c4 elo
READ_LONG 0x02c8 elc
READ_ASCII kso ks ELSE fail (0x0c * ksc)
READ_ASCII smo sm ELSE fail (0x10 * smc)
READ_ASCII mso ms ELSE fail (0x0c * msc)
READ_ASCII iso is ELSE fail (0x50)
READ_ASCII ilo il ELSE fail (0x14 * ilc)
READ_ASCII elo el ELSE fail (elc * (0x30 + ((eff & 0x01) = 0x01 ? 0xd8 : 0x00)))
DELETE_BYTES 0x02d4 SOURCE_SIZE - 0x02d4
SET off_0 = 0x02d4
WRITE_LONG 0x02a0 off_0
PATCH_IF ~%ks%~ STR_CMP fail BEGIN
INSERT_BYTES off_0 0x0c * ksc
WRITE_ASCIIE off_0 ~%ks%~
END ELSE BEGIN
SET ksc = 0x00
WRITE_LONG 0x02a4 ksc
END
SET off_0 += 0x0c * ksc
WRITE_LONG 0x02a8 off_0
INSERT_BYTES off_0 0x10 * 0x11
PATCH_IF ~%sm%~ STR_CMP fail && smc = 0x11 BEGIN
WRITE_ASCIIE off_0 ~%sm%~
END ELSE BEGIN
FOR (i_0 = 0x00; i_0 < 0x07; i_0 += 0x01) BEGIN
WRITE_SHORT off_0 + i_0 * 0x10 i_0
END
FOR (i_0 = 0x00; i_0 < 0x09; i_0 += 0x01) BEGIN
WRITE_SHORT off_0 + i_0 * 0x10 + 0x070 i_0
WRITE_SHORT off_0 + i_0 * 0x10 + 0x076 0x01
END
WRITE_SHORT off_0 + 0x106 0x02
PATCH_IF ~%sm%~ STR_CMP fail BEGIN
PATCH_IF smc > 0x11 BEGIN
SET msc = 0x00
SPRINT ms fail
END ELSE PATCH_IF smc < 0x11 && smc > 0x00 BEGIN
PATCH_IF STRING_LENGTH EVALUATE_BUFFER ~%sm%~ = 0x10 * smc BEGIN
SET smc = 0x11
WHILE STRING_LENGTH EVALUATE_BUFFER ~%sm%~ > 0x00 BEGIN
SET off_1 = 0x00
INNER_PATCH_SAVE sm ~%sm%~ BEGIN
READ_SHORT 0x00 temp_0
SET off_1 += temp_0 * 0x10
READ_SHORT 0x06 temp_0
SET off_1 += 0x70 * temp_0 + (temp_0 = 0x02 ? 0x10 : 0x00)
READ_SHORT 0x08 temp_0
READ_ASCII 0x00 temp_1 (0x10)
DELETE_BYTES 0x00 0x10
END
WRITE_ASCIIE off_0 + off_1 ~%temp_1%~
FOR (off_1 += 0x10; off_1 < 0x110; off_1 += 0x10) BEGIN
WRITE_SHORT off_0 + off_1 + 0x08 temp_0
END
END
END ELSE BEGIN
SET smc = 0x11
SET msc = 0x00
SPRINT ms fail
END
END
END
END
SET off_0 += 0x110
WRITE_LONG 0x02b0 off_0
PATCH_IF ~%ms%~ STR_CMP fail && ~%sm%~ STR_CMP fail && smc = 0x11 BEGIN
INSERT_BYTES off_0 0x0c * msc
WRITE_ASCIIE off_0 ~%ms%~
END ELSE BEGIN
SET msc = 0x00
WRITE_LONG 0x02b4 msc
END
SET smc = 0x11
WRITE_LONG 0x2ac smc
SET off_0 += 0x0c * msc
WRITE_LONG 0x02c4 off_0
PATCH_IF ~%el%~ STR_CMP fail BEGIN
INSERT_BYTES off_0 (elc * (0x30 + (((eff & 0x01) = 0x01) ? 0xd8 : 0x00)))
WRITE_ASCIIE off_0 ~%el%~
END ELSE BEGIN
SET elc = 0x00
WRITE_LONG 0x02c8 elc
END
SET off_0 += (elc * (0x30 + (((eff & 0x01) = 0x01) ? 0xd8 : 0x00)))
WRITE_LONG 0x02bc off_0
PATCH_IF ~%il%~ STR_CMP fail BEGIN
INSERT_BYTES off_0 (0x14 * ilc)
WRITE_ASCIIE off_0 ~%il%~
END ELSE BEGIN
SET ilc = 0x00
WRITE_LONG 0x02c0 ilc
END
SET off_0 += 0x14 * ilc
WRITE_LONG 0x02b8 off_0
INSERT_BYTES off_0 0x50
PATCH_IF ~%is%~ STR_CMP fail BEGIN
WRITE_ASCIIE off_0 ~%is%~
END ELSE BEGIN
FOR (i_0 = 0x00; i_0 < 0x4c; i_0 += 0x02) BEGIN
WRITE_SHORT off_0 + i1 0xffff
END
END
SET SOURCE_SIZE = off_0 + 0x50
END
DEFINE_PATCH_MACRO fj_use_v2_eff BEGIN
LOCAL_SET elo = 0x2d4
LOCAL_SET elc = 0x00
LOCAL_SET i_0 = 0x00
LOCAL_SET off_0 = 0x00
LOCAL_SET off_1 = 0x2d4
LOCAL_SET eff_type = 0x01
LOCAL_SET opcode = 0x00
LOCAL_SET target = 0x00
LOCAL_SET power = 0x00
LOCAL_SET parameter1 = 0x00
LOCAL_SET parameter2 = 0x00
LOCAL_SET timing_mode = 0x00
LOCAL_SET dispellability = 0x00
LOCAL_SET duration = 0x00
LOCAL_SET probability1 = 0x00
LOCAL_SET probability2 = 0x00
LOCAL_SPRINT resref ~~
LOCAL_SPRINT efx ~~
LOCAL_SPRINT rfx ~~
READ_BYTE 0x33 eff_type
WRITE_BYTE 0x33 0x1
PATCH_IF (eff_type & 0x1) = 0x0 BEGIN
READ_LONG 0x2c8 elc
PATCH_IF elc > 0x0 BEGIN
READ_LONG 0x2c4 elo
READ_ASCII elo efx (0x30 * elc)
PATCH_FOR_EACH off_0 IN 0x2a0 0x2a8 0x2b0 0x2b8 0x2bc BEGIN
READ_LONG off_0 off_1
WRITE_LONG off_0 off_1 >= elo ? off_1 + elc * 0xd8 : off_1 < 0x2d4 ? 0x2d4 : off_1
END
DELETE_BYTES elo 0x030 * elc
INSERT_BYTES elo 0x108 * elc
SET SOURCE_SIZE += 0xd8 * elc
SPRINT rfx ~~
INNER_PATCH ~%efx%~ BEGIN
FOR (i_0 = 0x0; i_0 < elc; i_0 += 0x1) BEGIN
READ_SHORT i_0 * 0x30 + 0x00 opcode
READ_BYTE i_0 * 0x30 + 0x02 target
READ_BYTE i_0 * 0x30 + 0x03 power
READ_LONG i_0 * 0x30 + 0x04 parameter1
READ_LONG i_0 * 0x30 + 0x08 parameter2
READ_BYTE i_0 * 0x30 + 0x0c timing_mode
READ_BYTE i_0 * 0x30 + 0x0d dispellability
READ_LONG i_0 * 0x30 + 0x0e duration
READ_BYTE i_0 * 0x30 + 0x12 probability1
READ_BYTE i_0 * 0x30 + 0x13 probability2
READ_ASCII i_0 * 0x30 + 0x14 resref
INNER_PATCH_SAVE rfx ~%rfx%~ BEGIN
INSERT_BYTES i_0 * 0x108 + 0x00 0x110
WRITE_LONG i_0 * 0x108 + 0x10 opcode
WRITE_LONG i_0 * 0x108 + 0x14 target
WRITE_LONG i_0 * 0x108 + 0x18 power
WRITE_LONG i_0 * 0x108 + 0x1c parameter1
WRITE_LONG i_0 * 0x108 + 0x20 parameter2
WRITE_BYTE i_0 * 0x108 + 0x24 timing_mode
WRITE_LONG i_0 * 0x108 + 0x28 duration
WRITE_SHORT i_0 * 0x108 + 0x2c probability1
WRITE_SHORT i_0 * 0x108 + 0x2e probability2
WRITE_ASCIIE i_0 * 0x108 + 0x30 ~%resref%~
WRITE_BYTE i_0 * 0x108 + 0x5c dispellability
WRITE_LONG i_0 * 0x108 + 0x80 ` 0x0
WRITE_LONG i_0 * 0x108 + 0x84 ` 0x0
WRITE_LONG i_0 * 0x108 + 0x88 ` 0x0
WRITE_LONG i_0 * 0x108 + 0x8c ` 0x0
WRITE_LONG i_0 * 0x108 + 0xa4 ` 0x0
DELETE_BYTES i_0 * 0x108 + 0x08 0x8
END
END
END
WRITE_ASCIIE elo ~%rfx%~
END
END
END
DEFINE_PATCH_MACRO ~reindex_spell_or_item_extra_effects~ BEGIN
PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN
PATCH_IF !(~%SOURCE_FILE%~ STRING_MATCHES_REGEXP ~^.+\.spl~) THEN BEGIN
SET "hs" = 0x28
END ELSE PATCH_IF !(~%SOURCE_FILE%~ STRING_MATCHES_REGEXP ~^.+\.itm~) THEN BEGIN
SET "hs" = 0x38
END
READ_LONG 0x64 "ho"
READ_SHORT 0x68 "hc"
READ_LONG 0x6a "eo"
READ_SHORT 0x70 "ei"
PATCH_IF (("ho" > "eo") AND ("hc" > 0x01)) THEN BEGIN
READ_ASCII "ho" ~eh~ ELSE ~fail~ ("hs" * "hc")
PATCH_IF (~%eh%~ STRING_EQUAL ~fail~) THEN BEGIN
WHILE ((~%eh%~ STRING_EQUAL ~fail~) AND ("hc" > 0x00)) BEGIN
READ_ASCII "ho" ~eh~ ELSE ~fail~ ("hs" * "hc")
SET "hc" -= 0x01
END
END
DELETE_BYTES "ho" ("hs" * "hc")
SET "ho" = 0x72
WRITE_LONG 0x64 "ho"
WRITE_SHORT 0x68 "hc"
PATCH_IF !(~%eh%~ STRING_EQUAL ~fail~) THEN BEGIN
INSERT_BYTES "ho" ("hs" * "hc")
WRITE_ASCIIE "ho" ~%eh%~
END
END ELSE PATCH_IF (("ho" != 0x72) AND ("hc" = 0x00)) THEN BEGIN
SET "ho" = 0x72
WRITE_LONG 0x64 "ho"
END
FOR ("i1" = 0x00; "i1" < ("hs" * "hc"); "i1" += "hs") BEGIN
WRITE_SHORT ("ho" + "i1" + 0x20) "ei"
READ_SHORT ("ho" + "i1" + 0x1e) "ec"
SET "ei" += "ec"
END
PATCH_IF (SOURCE_SIZE > (0x72 + ("hs" * "hc") + (0x30 * "ei"))) THEN BEGIN
DELETE_BYTES (0x72 + ("hs" * "hc") + (0x30 * "ei")) (SOURCE_SIZE - (0x72 + ("hs" * "hc") + (0x30 * "ei")))
END
END
END


COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ override
LAUNCH_PATCH_MACRO fj_cre_validity
PATCH_IF valid BEGIN
LAUNCH_PATCH_MACRO fj_enforce_cre_order
LAUNCH_PATCH_MACRO fj_use_v2_eff
END
BUT_ONLY

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
LAUNCH_PATCH_MACRO ~reindex_spell_or_item_extra_effects~
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ ~override~
LAUNCH_PATCH_MACRO ~reindex_spell_or_item_extra_effects~
BUT_ONLY_IF_IT_CHANGES
